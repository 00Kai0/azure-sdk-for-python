# this is a template tox.ini file used where there is no package-specific configuration
# note that this file will be copied into an appropriate package folder during build-CI. To locally leverage this, 
# do one of the following:
# 1) Execute your tests by using `python ./scripts/devops_tasks/setup_execute_tests.py <target-package>`
#    a) This will also result in a `tox.ini` residing in the package directory.
# 2) Manually copy this file into your package folder. `cd` to the folder. run `tox`

[tox]
envlist = {py27,py37}-{linux,macos,windows}-{test}

[base]
deps = 
  -rdev_requirements.txt
  lint: pylint==2.3.0; python_version >= '3.4'
  lint: pylint==1.9.4; python_version < '3.4'

[pytest]
out_options = --junitxml={toxinidir}/test-junit-{envname}.xml --verbose --durations=10 --verbose
cov_options = --cov --cov-report=
markers = cosmosEmulator: indicates a test that requires an active cosmos emulator to properly execute

[testenv]
pre-deps =
  wheel
skip_install = true
skipsdist = true
platform = linux: linux
           macos: darwin
           windows: win32
passenv = *
deps = {[base]deps}
changedir = {toxinidir}

commands = 
    python {toxinidir}/../../../eng/tox/create_wheel_and_install.py -d {distdir} -p {toxinidir}
    pytest \
      {[pytest]cov_options} \
      {[pytest]out_options} \
      {posargs} \
      {toxinidir}

[testenv:lint]
skip_install = true
skipsdist = true
platform = linux: linux
           macos: darwin
           windows: win32
passenv = *
deps = {[base]deps}
changedir = {toxinidir}

commands = 
    python {toxinidir}/../../../eng/tox/create_wheel_and_install.py -d {distdir} -p {toxinidir}
    pytest \
      {[pytest]cov_options} \
      {[pytest]out_options} \
      {posargs} \
      {toxinidir}

    lint: pylint \
    lint:  --output-format=parseable \
    lint:  --rcfile {toxinidir}/../../../pylintrc \
    lint:  --exit-zero \
    lint:  {toxinidir}/azure

[testenv:mypi]


[testenv:sdist]
usedevelop = True
deps = 
  {[base]deps}
passenv = *
changedir = {toxinidir}

commands =
    pytest \
      {[pytest]cov_options} \
      {[pytest]out_options} \
      {posargs} \
      {toxinidir}