interactions:
- request:
    body: null
    headers:
      Accept: [application/json]
      Content-Length: ['0']
      Content-Type: [application/json; charset=utf-8]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b6 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: POST
    uri: https://vault.vault.azure.net/certificates/certcfa1497/create?api-version=7.0
  response:
    body: {string: '{"error":{"code":"Unauthorized","message":"Request is missing
        a Bearer or PoP token."}}'}
    headers: {cache-control: no-cache, content-length: '87', content-type: application/json;
        charset=utf-8, date: 'Wed, 04 Dec 2019 20:03:29 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      www-authenticate: 'Bearer authorization="https://login.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47",
        resource="https://vault.azure.net"', x-aspnet-version: 4.0.30319, x-content-type-options: nosniff,
      x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.883, x-powered-by: ASP.NET}
    status: {code: 401, message: Unauthorized}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultyeqtnsbz7muhwz6nsmk.vault.azure.net,
        /certificates/certcfa1497/create, api-version=7.0, '']
- request:
    body: '{"policy": {"x509_props": {"subject": "CN=DefaultPolicy", "sans": {"upns":
      ["john.doe@domain.com"]}}, "issuer": {"name": "Self"}}}'
    headers:
      Accept: [application/json]
      Content-Length: ['130']
      Content-Type: [application/json; charset=utf-8]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b6 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: POST
    uri: https://vault.vault.azure.net/certificates/certcfa1497/create?api-version=7.0
  response:
    body: {string: '{"id":"https://vault.vault.azure.net/certificates/certcfa1497/pending","issuer":{"name":"Self"},"csr":"MIIC2DCCAcACAQAwGDEWMBQGA1UEAxMNRGVmYXVsdFBvbGljeTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKiPpjccDCNNIf/DuIM9pgkLuP5ircz95HwZpdewnGheB1zC+PdoKcdhxx4uzqP2iXGqQC04GL604dhlWyZzQmide/pz313fh5SqNcJHZXyBuwncU9s/dypA4bGmwsYgQR2F43ItVmxtVhPsZ/u0+ceseqviJBypZxYKSgXIrOSIgcHBmrjtaEX7n6/UZfK36nfg3XDBj3fDSaHvxi3nT59Thb7ihFLfolTls4G1/ezoW9I0eGjLyo2ajnSFGAlqKp41pQAQFtH8lC60zwyB2vC5wwS6WPN4Pz70BGrvV9+tTJUdu9XBoMuENi9hogh/t3a6DPT5K5kur3GFA5EH0JUCAwEAAaB7MHkGCSqGSIb3DQEJDjFsMGowDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAuBgNVHREEJzAloCMGCisGAQQBgjcUAgOgFQwTam9obi5kb2VAZG9tYWluLmNvbTAJBgNVHRMEAjAAMA0GCSqGSIb3DQEBCwUAA4IBAQAWfaSPonM5ZQjQkPSVsoF6D60GnY79USlx0JS3q6CJuJ5RnoZ+oyCCO7L7Yw5ktqa0mt8bPapiUGOKrEugbxkakMmLxQh/Lfq6r6XN9v2zJWHnScrWXg0HJeY4SuONWNg6vDiSbDzIcg4V9a8+D/s/u57ICHDVndMxQhoey94o5l2t44EYBc0nSc9oGkgcqlUXSXSoMqJVYzWelQpNiqIYxpS5LbHABombyvhVhuRX4+6ls2OrMiHJWfnXpSdMPPbahpvFhMajcJuoA0unV1gr1IKEkUN3fvLdzuJvTFBoI21e3fnVdBFEeSrBDCo3rgLxDHn5xofF0qIac/IOp/1b","cancellation_requested":false,"status":"inProgress","status_details":"Pending
        certificate created. Certificate request is in progress. This may take some
        time based on the issuer provider. Please check again later.","request_id":"fb15750e3abc42bc804eea54b014edfb"}'}
    headers:
      cache-control: no-cache
      content-length: '1365'
      content-type: application/json; charset=utf-8
      date: Wed, 04 Dec 2019 20:03:30 GMT
      expires: '-1'
      location: [h, t, t, p, s, ':', /, /, v, a, u, l, t, y, e, q, t, n, s, b, z,
        '7', m, u, h, w, z, '6', n, s, m, k, ., v, a, u, l, t, ., a, z, u, r, e, .,
        n, e, t, /, c, e, r, t, i, f, i, c, a, t, e, s, /, c, e, r, t, c, f, a, '1',
        '4', '9', '7', /, p, e, n, d, i, n, g, '?', a, p, i, '-', v, e, r, s, i, o,
        n, '=', '7', ., '0', '&', r, e, q, u, e, s, t, _, i, d, '=', f, b, '1', '5',
        '7', '5', '0', e, '3', a, b, c, '4', '2', b, c, '8', '0', '4', e, e, a, '5',
        '4', b, '0', '1', '4', e, d, f, b]
      pragma: no-cache
      retry-after: '10'
      server: Microsoft-IIS/10.0
      strict-transport-security: max-age=31536000;includeSubDomains
      x-aspnet-version: 4.0.30319
      x-content-type-options: nosniff
      x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;
      x-ms-keyvault-region: westus
      x-ms-keyvault-service-version: 1.1.0.883
      x-powered-by: ASP.NET
    status: {code: 202, message: Accepted}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultyeqtnsbz7muhwz6nsmk.vault.azure.net,
        /certificates/certcfa1497/create, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b6 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: GET
    uri: https://vault.vault.azure.net/certificates/certcfa1497/pending?api-version=7.0
  response:
    body: {string: '{"id":"https://vault.vault.azure.net/certificates/certcfa1497/pending","issuer":{"name":"Self"},"csr":"MIIC2DCCAcACAQAwGDEWMBQGA1UEAxMNRGVmYXVsdFBvbGljeTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKiPpjccDCNNIf/DuIM9pgkLuP5ircz95HwZpdewnGheB1zC+PdoKcdhxx4uzqP2iXGqQC04GL604dhlWyZzQmide/pz313fh5SqNcJHZXyBuwncU9s/dypA4bGmwsYgQR2F43ItVmxtVhPsZ/u0+ceseqviJBypZxYKSgXIrOSIgcHBmrjtaEX7n6/UZfK36nfg3XDBj3fDSaHvxi3nT59Thb7ihFLfolTls4G1/ezoW9I0eGjLyo2ajnSFGAlqKp41pQAQFtH8lC60zwyB2vC5wwS6WPN4Pz70BGrvV9+tTJUdu9XBoMuENi9hogh/t3a6DPT5K5kur3GFA5EH0JUCAwEAAaB7MHkGCSqGSIb3DQEJDjFsMGowDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAuBgNVHREEJzAloCMGCisGAQQBgjcUAgOgFQwTam9obi5kb2VAZG9tYWluLmNvbTAJBgNVHRMEAjAAMA0GCSqGSIb3DQEBCwUAA4IBAQAWfaSPonM5ZQjQkPSVsoF6D60GnY79USlx0JS3q6CJuJ5RnoZ+oyCCO7L7Yw5ktqa0mt8bPapiUGOKrEugbxkakMmLxQh/Lfq6r6XN9v2zJWHnScrWXg0HJeY4SuONWNg6vDiSbDzIcg4V9a8+D/s/u57ICHDVndMxQhoey94o5l2t44EYBc0nSc9oGkgcqlUXSXSoMqJVYzWelQpNiqIYxpS5LbHABombyvhVhuRX4+6ls2OrMiHJWfnXpSdMPPbahpvFhMajcJuoA0unV1gr1IKEkUN3fvLdzuJvTFBoI21e3fnVdBFEeSrBDCo3rgLxDHn5xofF0qIac/IOp/1b","cancellation_requested":false,"status":"inProgress","status_details":"Pending
        certificate created. Certificate request is in progress. This may take some
        time based on the issuer provider. Please check again later.","request_id":"fb15750e3abc42bc804eea54b014edfb"}'}
    headers: {cache-control: no-cache, content-length: '1365', content-type: application/json;
        charset=utf-8, date: 'Wed, 04 Dec 2019 20:03:30 GMT', expires: '-1', pragma: no-cache,
      retry-after: '10', server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.883, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultyeqtnsbz7muhwz6nsmk.vault.azure.net,
        /certificates/certcfa1497/pending, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b6 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: GET
    uri: https://vault.vault.azure.net/certificates/certcfa1497/pending?api-version=7.0
  response:
    body: {string: '{"id":"https://vault.vault.azure.net/certificates/certcfa1497/pending","issuer":{"name":"Self"},"csr":"MIIC2DCCAcACAQAwGDEWMBQGA1UEAxMNRGVmYXVsdFBvbGljeTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKiPpjccDCNNIf/DuIM9pgkLuP5ircz95HwZpdewnGheB1zC+PdoKcdhxx4uzqP2iXGqQC04GL604dhlWyZzQmide/pz313fh5SqNcJHZXyBuwncU9s/dypA4bGmwsYgQR2F43ItVmxtVhPsZ/u0+ceseqviJBypZxYKSgXIrOSIgcHBmrjtaEX7n6/UZfK36nfg3XDBj3fDSaHvxi3nT59Thb7ihFLfolTls4G1/ezoW9I0eGjLyo2ajnSFGAlqKp41pQAQFtH8lC60zwyB2vC5wwS6WPN4Pz70BGrvV9+tTJUdu9XBoMuENi9hogh/t3a6DPT5K5kur3GFA5EH0JUCAwEAAaB7MHkGCSqGSIb3DQEJDjFsMGowDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAuBgNVHREEJzAloCMGCisGAQQBgjcUAgOgFQwTam9obi5kb2VAZG9tYWluLmNvbTAJBgNVHRMEAjAAMA0GCSqGSIb3DQEBCwUAA4IBAQAWfaSPonM5ZQjQkPSVsoF6D60GnY79USlx0JS3q6CJuJ5RnoZ+oyCCO7L7Yw5ktqa0mt8bPapiUGOKrEugbxkakMmLxQh/Lfq6r6XN9v2zJWHnScrWXg0HJeY4SuONWNg6vDiSbDzIcg4V9a8+D/s/u57ICHDVndMxQhoey94o5l2t44EYBc0nSc9oGkgcqlUXSXSoMqJVYzWelQpNiqIYxpS5LbHABombyvhVhuRX4+6ls2OrMiHJWfnXpSdMPPbahpvFhMajcJuoA0unV1gr1IKEkUN3fvLdzuJvTFBoI21e3fnVdBFEeSrBDCo3rgLxDHn5xofF0qIac/IOp/1b","cancellation_requested":false,"status":"inProgress","status_details":"Pending
        certificate created. Certificate request is in progress. This may take some
        time based on the issuer provider. Please check again later.","request_id":"fb15750e3abc42bc804eea54b014edfb"}'}
    headers: {cache-control: no-cache, content-length: '1365', content-type: application/json;
        charset=utf-8, date: 'Wed, 04 Dec 2019 20:03:40 GMT', expires: '-1', pragma: no-cache,
      retry-after: '10', server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.883, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultyeqtnsbz7muhwz6nsmk.vault.azure.net,
        /certificates/certcfa1497/pending, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b6 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: GET
    uri: https://vault.vault.azure.net/certificates/certcfa1497/pending?api-version=7.0
  response:
    body: {string: '{"id":"https://vault.vault.azure.net/certificates/certcfa1497/pending","issuer":{"name":"Self"},"csr":"MIIC2DCCAcACAQAwGDEWMBQGA1UEAxMNRGVmYXVsdFBvbGljeTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKiPpjccDCNNIf/DuIM9pgkLuP5ircz95HwZpdewnGheB1zC+PdoKcdhxx4uzqP2iXGqQC04GL604dhlWyZzQmide/pz313fh5SqNcJHZXyBuwncU9s/dypA4bGmwsYgQR2F43ItVmxtVhPsZ/u0+ceseqviJBypZxYKSgXIrOSIgcHBmrjtaEX7n6/UZfK36nfg3XDBj3fDSaHvxi3nT59Thb7ihFLfolTls4G1/ezoW9I0eGjLyo2ajnSFGAlqKp41pQAQFtH8lC60zwyB2vC5wwS6WPN4Pz70BGrvV9+tTJUdu9XBoMuENi9hogh/t3a6DPT5K5kur3GFA5EH0JUCAwEAAaB7MHkGCSqGSIb3DQEJDjFsMGowDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAuBgNVHREEJzAloCMGCisGAQQBgjcUAgOgFQwTam9obi5kb2VAZG9tYWluLmNvbTAJBgNVHRMEAjAAMA0GCSqGSIb3DQEBCwUAA4IBAQAWfaSPonM5ZQjQkPSVsoF6D60GnY79USlx0JS3q6CJuJ5RnoZ+oyCCO7L7Yw5ktqa0mt8bPapiUGOKrEugbxkakMmLxQh/Lfq6r6XN9v2zJWHnScrWXg0HJeY4SuONWNg6vDiSbDzIcg4V9a8+D/s/u57ICHDVndMxQhoey94o5l2t44EYBc0nSc9oGkgcqlUXSXSoMqJVYzWelQpNiqIYxpS5LbHABombyvhVhuRX4+6ls2OrMiHJWfnXpSdMPPbahpvFhMajcJuoA0unV1gr1IKEkUN3fvLdzuJvTFBoI21e3fnVdBFEeSrBDCo3rgLxDHn5xofF0qIac/IOp/1b","cancellation_requested":false,"status":"inProgress","status_details":"Pending
        certificate created. Certificate request is in progress. This may take some
        time based on the issuer provider. Please check again later.","request_id":"fb15750e3abc42bc804eea54b014edfb"}'}
    headers: {cache-control: no-cache, content-length: '1365', content-type: application/json;
        charset=utf-8, date: 'Wed, 04 Dec 2019 20:03:50 GMT', expires: '-1', pragma: no-cache,
      retry-after: '10', server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.883, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultyeqtnsbz7muhwz6nsmk.vault.azure.net,
        /certificates/certcfa1497/pending, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b6 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: GET
    uri: https://vault.vault.azure.net/certificates/certcfa1497/pending?api-version=7.0
  response:
    body: {string: '{"id":"https://vault.vault.azure.net/certificates/certcfa1497/pending","issuer":{"name":"Self"},"csr":"MIIC2DCCAcACAQAwGDEWMBQGA1UEAxMNRGVmYXVsdFBvbGljeTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKiPpjccDCNNIf/DuIM9pgkLuP5ircz95HwZpdewnGheB1zC+PdoKcdhxx4uzqP2iXGqQC04GL604dhlWyZzQmide/pz313fh5SqNcJHZXyBuwncU9s/dypA4bGmwsYgQR2F43ItVmxtVhPsZ/u0+ceseqviJBypZxYKSgXIrOSIgcHBmrjtaEX7n6/UZfK36nfg3XDBj3fDSaHvxi3nT59Thb7ihFLfolTls4G1/ezoW9I0eGjLyo2ajnSFGAlqKp41pQAQFtH8lC60zwyB2vC5wwS6WPN4Pz70BGrvV9+tTJUdu9XBoMuENi9hogh/t3a6DPT5K5kur3GFA5EH0JUCAwEAAaB7MHkGCSqGSIb3DQEJDjFsMGowDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAuBgNVHREEJzAloCMGCisGAQQBgjcUAgOgFQwTam9obi5kb2VAZG9tYWluLmNvbTAJBgNVHRMEAjAAMA0GCSqGSIb3DQEBCwUAA4IBAQAWfaSPonM5ZQjQkPSVsoF6D60GnY79USlx0JS3q6CJuJ5RnoZ+oyCCO7L7Yw5ktqa0mt8bPapiUGOKrEugbxkakMmLxQh/Lfq6r6XN9v2zJWHnScrWXg0HJeY4SuONWNg6vDiSbDzIcg4V9a8+D/s/u57ICHDVndMxQhoey94o5l2t44EYBc0nSc9oGkgcqlUXSXSoMqJVYzWelQpNiqIYxpS5LbHABombyvhVhuRX4+6ls2OrMiHJWfnXpSdMPPbahpvFhMajcJuoA0unV1gr1IKEkUN3fvLdzuJvTFBoI21e3fnVdBFEeSrBDCo3rgLxDHn5xofF0qIac/IOp/1b","cancellation_requested":false,"status":"completed","target":"https://vault.vault.azure.net/certificates/certcfa1497","request_id":"fb15750e3abc42bc804eea54b014edfb"}'}
    headers: {cache-control: no-cache, content-length: '1285', content-type: application/json;
        charset=utf-8, date: 'Wed, 04 Dec 2019 20:04:00 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.883, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultyeqtnsbz7muhwz6nsmk.vault.azure.net,
        /certificates/certcfa1497/pending, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b6 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: GET
    uri: https://vault.vault.azure.net/certificates/certcfa1497/?api-version=7.0
  response:
    body: {string: '{"id":"https://vault.vault.azure.net/certificates/certcfa1497/87d579bdec8a4d5a94540e3fb2b1f392","kid":"https://vault.vault.azure.net/keys/certcfa1497/87d579bdec8a4d5a94540e3fb2b1f392","sid":"https://vault.vault.azure.net/secrets/certcfa1497/87d579bdec8a4d5a94540e3fb2b1f392","x5t":"8sCDbc9JifMVNsRooyXpMiyOk3U","cer":"MIIDaDCCAlCgAwIBAgIQOn8tJ9pcQ8Wb6IB+3PBvljANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDEw1EZWZhdWx0UG9saWN5MB4XDTE5MTIwNDE5NTM1MVoXDTIwMTIwNDIwMDM1MVowGDEWMBQGA1UEAxMNRGVmYXVsdFBvbGljeTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKiPpjccDCNNIf/DuIM9pgkLuP5ircz95HwZpdewnGheB1zC+PdoKcdhxx4uzqP2iXGqQC04GL604dhlWyZzQmide/pz313fh5SqNcJHZXyBuwncU9s/dypA4bGmwsYgQR2F43ItVmxtVhPsZ/u0+ceseqviJBypZxYKSgXIrOSIgcHBmrjtaEX7n6/UZfK36nfg3XDBj3fDSaHvxi3nT59Thb7ihFLfolTls4G1/ezoW9I0eGjLyo2ajnSFGAlqKp41pQAQFtH8lC60zwyB2vC5wwS6WPN4Pz70BGrvV9+tTJUdu9XBoMuENi9hogh/t3a6DPT5K5kur3GFA5EH0JUCAwEAAaOBrTCBqjAOBgNVHQ8BAf8EBAMCBaAwCQYDVR0TBAIwADAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwLgYDVR0RBCcwJaAjBgorBgEEAYI3FAIDoBUME2pvaG4uZG9lQGRvbWFpbi5jb20wHwYDVR0jBBgwFoAUs9VSVhnPfFMWFQk9XIz1k82n044wHQYDVR0OBBYEFLPVUlYZz3xTFhUJPVyM9ZPNp9OOMA0GCSqGSIb3DQEBCwUAA4IBAQB9OQhFM1Bft9gItWXwD073HfZgmO6l4nIRcC8wDVHvYPPr6zoGbvAAtctyP0B3b8xTFuyx1INH3plldbN5pV2/sLIcJx9/uThG158K+RCL3qCzkoeOd7n280AIcJhUML/zp+ZTFT46DRn8D3O+aBxf/MwY/qFjZsCWk+JOWkypJyUicOv1aIXtFTq0bw0GMprrFE/ZG6qHvtiajKnuupJCEQok/DX5lRHS5eSu+fKdF6MR2Fc2XIu+j8hNzNlD+E8lUyzVoyE9neGIt4VF++mVF/dm0pG/Bppj1hAx3+yPPcA127ddyLVM8uuaduEn45VhMLSKJ/49QSXdVGHFVWcS","attributes":{"enabled":true,"nbf":1575489231,"exp":1607112231,"created":1575489831,"updated":1575489831,"recoveryLevel":"Purgeable"},"policy":{"id":"https://vault.vault.azure.net/certificates/certcfa1497/policy","key_props":{"exportable":true,"kty":"RSA","key_size":2048,"reuse_key":false},"secret_props":{"contentType":"application/x-pkcs12"},"x509_props":{"subject":"CN=DefaultPolicy","sans":{"upns":["john.doe@domain.com"]},"ekus":["1.3.6.1.5.5.7.3.1","1.3.6.1.5.5.7.3.2"],"key_usage":["digitalSignature","keyEncipherment"],"validity_months":12,"basic_constraints":{"ca":false}},"lifetime_actions":[{"trigger":{"lifetime_percentage":80},"action":{"action_type":"AutoRenew"}}],"issuer":{"name":"Self"},"attributes":{"enabled":true,"created":1575489810,"updated":1575489810}},"pending":{"id":"https://vault.vault.azure.net/certificates/certcfa1497/pending"}}'}
    headers: {cache-control: no-cache, content-length: '2443', content-type: application/json;
        charset=utf-8, date: 'Wed, 04 Dec 2019 20:04:05 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.883, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultyeqtnsbz7muhwz6nsmk.vault.azure.net,
        /certificates/certcfa1497/, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b6 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: POST
    uri: https://vault.vault.azure.net/certificates/certcfa1497/backup?api-version=7.0
  response:
    body: {string: '{"value":""}'}
    headers: {cache-control: no-cache, content-length: '43318', content-type: application/json;
        charset=utf-8, date: 'Wed, 04 Dec 2019 20:04:05 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.883, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultyeqtnsbz7muhwz6nsmk.vault.azure.net,
        /certificates/certcfa1497/backup, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b6 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: DELETE
    uri: https://vault.vault.azure.net/certificates/certcfa1497?api-version=7.0
  response:
    body: {string: '{"id":"https://vault.vault.azure.net/certificates/certcfa1497/87d579bdec8a4d5a94540e3fb2b1f392","kid":"https://vault.vault.azure.net/keys/certcfa1497/87d579bdec8a4d5a94540e3fb2b1f392","sid":"https://vault.vault.azure.net/secrets/certcfa1497/87d579bdec8a4d5a94540e3fb2b1f392","x5t":"8sCDbc9JifMVNsRooyXpMiyOk3U","cer":"MIIDaDCCAlCgAwIBAgIQOn8tJ9pcQ8Wb6IB+3PBvljANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDEw1EZWZhdWx0UG9saWN5MB4XDTE5MTIwNDE5NTM1MVoXDTIwMTIwNDIwMDM1MVowGDEWMBQGA1UEAxMNRGVmYXVsdFBvbGljeTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKiPpjccDCNNIf/DuIM9pgkLuP5ircz95HwZpdewnGheB1zC+PdoKcdhxx4uzqP2iXGqQC04GL604dhlWyZzQmide/pz313fh5SqNcJHZXyBuwncU9s/dypA4bGmwsYgQR2F43ItVmxtVhPsZ/u0+ceseqviJBypZxYKSgXIrOSIgcHBmrjtaEX7n6/UZfK36nfg3XDBj3fDSaHvxi3nT59Thb7ihFLfolTls4G1/ezoW9I0eGjLyo2ajnSFGAlqKp41pQAQFtH8lC60zwyB2vC5wwS6WPN4Pz70BGrvV9+tTJUdu9XBoMuENi9hogh/t3a6DPT5K5kur3GFA5EH0JUCAwEAAaOBrTCBqjAOBgNVHQ8BAf8EBAMCBaAwCQYDVR0TBAIwADAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwLgYDVR0RBCcwJaAjBgorBgEEAYI3FAIDoBUME2pvaG4uZG9lQGRvbWFpbi5jb20wHwYDVR0jBBgwFoAUs9VSVhnPfFMWFQk9XIz1k82n044wHQYDVR0OBBYEFLPVUlYZz3xTFhUJPVyM9ZPNp9OOMA0GCSqGSIb3DQEBCwUAA4IBAQB9OQhFM1Bft9gItWXwD073HfZgmO6l4nIRcC8wDVHvYPPr6zoGbvAAtctyP0B3b8xTFuyx1INH3plldbN5pV2/sLIcJx9/uThG158K+RCL3qCzkoeOd7n280AIcJhUML/zp+ZTFT46DRn8D3O+aBxf/MwY/qFjZsCWk+JOWkypJyUicOv1aIXtFTq0bw0GMprrFE/ZG6qHvtiajKnuupJCEQok/DX5lRHS5eSu+fKdF6MR2Fc2XIu+j8hNzNlD+E8lUyzVoyE9neGIt4VF++mVF/dm0pG/Bppj1hAx3+yPPcA127ddyLVM8uuaduEn45VhMLSKJ/49QSXdVGHFVWcS","attributes":{"enabled":true,"nbf":1575489231,"exp":1607112231,"created":1575489831,"updated":1575489831,"recoveryLevel":"Purgeable"},"policy":{"id":"https://vault.vault.azure.net/certificates/certcfa1497/policy","key_props":{"exportable":true,"kty":"RSA","key_size":2048,"reuse_key":false},"secret_props":{"contentType":"application/x-pkcs12"},"x509_props":{"subject":"CN=DefaultPolicy","sans":{"upns":["john.doe@domain.com"]},"ekus":["1.3.6.1.5.5.7.3.1","1.3.6.1.5.5.7.3.2"],"key_usage":["digitalSignature","keyEncipherment"],"validity_months":12,"basic_constraints":{"ca":false}},"lifetime_actions":[{"trigger":{"lifetime_percentage":80},"action":{"action_type":"AutoRenew"}}],"issuer":{"name":"Self"},"attributes":{"enabled":true,"created":1575489810,"updated":1575489810}},"pending":{"id":"https://vault.vault.azure.net/certificates/certcfa1497/pending"}}'}
    headers: {cache-control: no-cache, content-length: '2443', content-type: application/json;
        charset=utf-8, date: 'Wed, 04 Dec 2019 20:04:06 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.883, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultyeqtnsbz7muhwz6nsmk.vault.azure.net,
        /certificates/certcfa1497, api-version=7.0, '']
- request:
    body: '{"value": ""}'
    headers:
      Accept: [application/json]
      Content-Length: ['43319']
      Content-Type: [application/json; charset=utf-8]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b6 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: POST
    uri: https://vault.vault.azure.net/certificates/restore?api-version=7.0
  response:
    body: {string: '{"id":"https://vault.vault.azure.net/certificates/certcfa1497/87d579bdec8a4d5a94540e3fb2b1f392","kid":"https://vault.vault.azure.net/keys/certcfa1497/87d579bdec8a4d5a94540e3fb2b1f392","sid":"https://vault.vault.azure.net/secrets/certcfa1497/87d579bdec8a4d5a94540e3fb2b1f392","x5t":"8sCDbc9JifMVNsRooyXpMiyOk3U","cer":"MIIDaDCCAlCgAwIBAgIQOn8tJ9pcQ8Wb6IB+3PBvljANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDEw1EZWZhdWx0UG9saWN5MB4XDTE5MTIwNDE5NTM1MVoXDTIwMTIwNDIwMDM1MVowGDEWMBQGA1UEAxMNRGVmYXVsdFBvbGljeTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKiPpjccDCNNIf/DuIM9pgkLuP5ircz95HwZpdewnGheB1zC+PdoKcdhxx4uzqP2iXGqQC04GL604dhlWyZzQmide/pz313fh5SqNcJHZXyBuwncU9s/dypA4bGmwsYgQR2F43ItVmxtVhPsZ/u0+ceseqviJBypZxYKSgXIrOSIgcHBmrjtaEX7n6/UZfK36nfg3XDBj3fDSaHvxi3nT59Thb7ihFLfolTls4G1/ezoW9I0eGjLyo2ajnSFGAlqKp41pQAQFtH8lC60zwyB2vC5wwS6WPN4Pz70BGrvV9+tTJUdu9XBoMuENi9hogh/t3a6DPT5K5kur3GFA5EH0JUCAwEAAaOBrTCBqjAOBgNVHQ8BAf8EBAMCBaAwCQYDVR0TBAIwADAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwLgYDVR0RBCcwJaAjBgorBgEEAYI3FAIDoBUME2pvaG4uZG9lQGRvbWFpbi5jb20wHwYDVR0jBBgwFoAUs9VSVhnPfFMWFQk9XIz1k82n044wHQYDVR0OBBYEFLPVUlYZz3xTFhUJPVyM9ZPNp9OOMA0GCSqGSIb3DQEBCwUAA4IBAQB9OQhFM1Bft9gItWXwD073HfZgmO6l4nIRcC8wDVHvYPPr6zoGbvAAtctyP0B3b8xTFuyx1INH3plldbN5pV2/sLIcJx9/uThG158K+RCL3qCzkoeOd7n280AIcJhUML/zp+ZTFT46DRn8D3O+aBxf/MwY/qFjZsCWk+JOWkypJyUicOv1aIXtFTq0bw0GMprrFE/ZG6qHvtiajKnuupJCEQok/DX5lRHS5eSu+fKdF6MR2Fc2XIu+j8hNzNlD+E8lUyzVoyE9neGIt4VF++mVF/dm0pG/Bppj1hAx3+yPPcA127ddyLVM8uuaduEn45VhMLSKJ/49QSXdVGHFVWcS","attributes":{"enabled":true,"nbf":1575489231,"exp":1607112231,"created":1575489831,"updated":1575489831,"recoveryLevel":"Purgeable"},"policy":{"id":"https://vault.vault.azure.net/certificates/certcfa1497/policy","key_props":{"exportable":true,"kty":"RSA","key_size":2048,"reuse_key":false},"secret_props":{"contentType":"application/x-pkcs12"},"x509_props":{"subject":"CN=DefaultPolicy","ekus":["1.3.6.1.5.5.7.3.1","1.3.6.1.5.5.7.3.2"],"key_usage":["digitalSignature","keyEncipherment"],"validity_months":12,"basic_constraints":{"ca":false}},"lifetime_actions":[{"trigger":{"lifetime_percentage":80},"action":{"action_type":"AutoRenew"}}],"issuer":{"name":"Self"},"attributes":{"enabled":true,"created":1575489810,"updated":1575489810}}}'}
    headers: {cache-control: no-cache, content-length: '2302', content-type: application/json;
        charset=utf-8, date: 'Wed, 04 Dec 2019 20:04:06 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.883, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultyeqtnsbz7muhwz6nsmk.vault.azure.net,
        /certificates/restore, api-version=7.0, '']
version: 1
