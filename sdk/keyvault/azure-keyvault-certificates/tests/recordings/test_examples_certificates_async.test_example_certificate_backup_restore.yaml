interactions:
- request:
    body: null
    headers:
      Accept: [application/json]
      Content-Length: ['0']
      Content-Type: [application/json; charset=utf-8]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b6 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: POST
    uri: https://vault.vault.azure.net/certificates/cert-name/create?api-version=7.0
  response:
    body: {string: '{"error":{"code":"Unauthorized","message":"Request is missing
        a Bearer or PoP token."}}'}
    headers: {cache-control: no-cache, content-length: '87', content-type: application/json;
        charset=utf-8, date: 'Wed, 04 Dec 2019 20:05:21 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      www-authenticate: 'Bearer authorization="https://login.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47",
        resource="https://vault.azure.net"', x-aspnet-version: 4.0.30319, x-content-type-options: nosniff,
      x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.883, x-powered-by: ASP.NET}
    status: {code: 401, message: Unauthorized}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultlgwvlc6ztlt3hsizr6s.vault.azure.net,
        /certificates/cert-name/create, api-version=7.0, '']
- request:
    body: '{"policy": {"key_props": {"exportable": true, "kty": "RSA", "key_size":
      2048, "reuse_key": false}, "secret_props": {"contentType": "application/x-pkcs12"},
      "x509_props": {"subject": "CN=*.microsoft.com", "sans": {"dns_names": ["sdk.azure-int.net"]},
      "validity_months": 24}, "issuer": {"name": "Self"}}}'
    headers:
      Accept: [application/json]
      Content-Length: ['302']
      Content-Type: [application/json; charset=utf-8]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b6 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: POST
    uri: https://vault.vault.azure.net/certificates/cert-name/create?api-version=7.0
  response:
    body: {string: '{"id":"https://vault.vault.azure.net/certificates/cert-name/pending","issuer":{"name":"Self"},"csr":"MIICyDCCAbACAQAwGjEYMBYGA1UEAwwPKi5taWNyb3NvZnQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1t7qLFfUQ0RSf4ab+sefvW/5sb0VI074sJaRsY0D8nW3zYjJJFGQ225zuURGx8CA5awJgNApq/F3XT+LZhtQlaHtctsK1tfq1zCK1EpcV7oYrM57qUOyjxm0e7MpRqmEcF5zWkUJwllsNJfenIqmPBe3J5XQD0+dgVg8dLggdOtzZtuzXOkAlQex3Wroqhv55drzmcFvbOKyDYy4dmTfWAONqFcFLIIDY2WfaiX7Xsu34ULcOdp3KwkeCJXoqaNujlvqZ0C6B/Z9Sn5oU+oR2F0sEwN7OqtEQGBSQPgLgmiqV5zUBqyof39UWZ7kFW1M3YAg6lIeZ6UscRszUpz5lQIDAQABoGkwZwYJKoZIhvcNAQkOMVowWDAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMBwGA1UdEQQVMBOCEXNkay5henVyZS1pbnQubmV0MAkGA1UdEwQCMAAwDQYJKoZIhvcNAQELBQADggEBABpxB13ATu8f/JPP5C9KznCBDCywesyPpccyuPlVTidGzwktx3VKrcqmxjLheeWIJ9cLp6/I+UV64dnInUSrVlK/J32dIsET8jhyWF0i1PgRmb71UqNWnh0UBfsEuaHnwEgO+/bDkfL/7b6fFtV6hu3BkdY3YMWH0KZUez7X5NC47EP856tvkVczCoS88BWBaDLpCmKIoZEsH0DHKxw5Cl4TQa4BWoWfs1Ex82oUbs2MxJq725KcOBpDkFo08PZylw8ITMqsL8NR3kgm6WQy/V5o+iSEc5r3p4bGvRWXxDDewsAlgwdQ53zo5b2j/T7EfRz1RsfP9zVJPOJXQtAzfhI=","cancellation_requested":false,"status":"inProgress","status_details":"Pending
        certificate created. Certificate request is in progress. This may take some
        time based on the issuer provider. Please check again later.","request_id":"cc07f0d78a5541f397b9f78f0ea8d066"}'}
    headers:
      cache-control: no-cache
      content-length: '1343'
      content-type: application/json; charset=utf-8
      date: Wed, 04 Dec 2019 20:05:22 GMT
      expires: '-1'
      location: [h, t, t, p, s, ':', /, /, v, a, u, l, t, l, g, w, v, l, c, '6', z,
        t, l, t, '3', h, s, i, z, r, '6', s, ., v, a, u, l, t, ., a, z, u, r, e, .,
        n, e, t, /, c, e, r, t, i, f, i, c, a, t, e, s, /, c, e, r, t, '-', n, a,
        m, e, /, p, e, n, d, i, n, g, '?', a, p, i, '-', v, e, r, s, i, o, n, '=',
        '7', ., '0', '&', r, e, q, u, e, s, t, _, i, d, '=', c, c, '0', '7', f, '0',
        d, '7', '8', a, '5', '5', '4', '1', f, '3', '9', '7', b, '9', f, '7', '8',
        f, '0', e, a, '8', d, '0', '6', '6']
      pragma: no-cache
      server: Microsoft-IIS/10.0
      strict-transport-security: max-age=31536000;includeSubDomains
      x-aspnet-version: 4.0.30319
      x-content-type-options: nosniff
      x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;
      x-ms-keyvault-region: westus
      x-ms-keyvault-service-version: 1.1.0.883
      x-powered-by: ASP.NET
    status: {code: 202, message: Accepted}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultlgwvlc6ztlt3hsizr6s.vault.azure.net,
        /certificates/cert-name/create, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b6 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: GET
    uri: https://vault.vault.azure.net/certificates/cert-name/pending?api-version=7.0
  response:
    body: {string: '{"id":"https://vault.vault.azure.net/certificates/cert-name/pending","issuer":{"name":"Self"},"csr":"MIICyDCCAbACAQAwGjEYMBYGA1UEAwwPKi5taWNyb3NvZnQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1t7qLFfUQ0RSf4ab+sefvW/5sb0VI074sJaRsY0D8nW3zYjJJFGQ225zuURGx8CA5awJgNApq/F3XT+LZhtQlaHtctsK1tfq1zCK1EpcV7oYrM57qUOyjxm0e7MpRqmEcF5zWkUJwllsNJfenIqmPBe3J5XQD0+dgVg8dLggdOtzZtuzXOkAlQex3Wroqhv55drzmcFvbOKyDYy4dmTfWAONqFcFLIIDY2WfaiX7Xsu34ULcOdp3KwkeCJXoqaNujlvqZ0C6B/Z9Sn5oU+oR2F0sEwN7OqtEQGBSQPgLgmiqV5zUBqyof39UWZ7kFW1M3YAg6lIeZ6UscRszUpz5lQIDAQABoGkwZwYJKoZIhvcNAQkOMVowWDAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMBwGA1UdEQQVMBOCEXNkay5henVyZS1pbnQubmV0MAkGA1UdEwQCMAAwDQYJKoZIhvcNAQELBQADggEBABpxB13ATu8f/JPP5C9KznCBDCywesyPpccyuPlVTidGzwktx3VKrcqmxjLheeWIJ9cLp6/I+UV64dnInUSrVlK/J32dIsET8jhyWF0i1PgRmb71UqNWnh0UBfsEuaHnwEgO+/bDkfL/7b6fFtV6hu3BkdY3YMWH0KZUez7X5NC47EP856tvkVczCoS88BWBaDLpCmKIoZEsH0DHKxw5Cl4TQa4BWoWfs1Ex82oUbs2MxJq725KcOBpDkFo08PZylw8ITMqsL8NR3kgm6WQy/V5o+iSEc5r3p4bGvRWXxDDewsAlgwdQ53zo5b2j/T7EfRz1RsfP9zVJPOJXQtAzfhI=","cancellation_requested":false,"status":"inProgress","status_details":"Pending
        certificate created. Certificate request is in progress. This may take some
        time based on the issuer provider. Please check again later.","request_id":"cc07f0d78a5541f397b9f78f0ea8d066"}'}
    headers: {cache-control: no-cache, content-length: '1343', content-type: application/json;
        charset=utf-8, date: 'Wed, 04 Dec 2019 20:05:22 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.883, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultlgwvlc6ztlt3hsizr6s.vault.azure.net,
        /certificates/cert-name/pending, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b6 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: GET
    uri: https://vault.vault.azure.net/certificates/cert-name/pending?api-version=7.0
  response:
    body: {string: '{"id":"https://vault.vault.azure.net/certificates/cert-name/pending","issuer":{"name":"Self"},"csr":"MIICyDCCAbACAQAwGjEYMBYGA1UEAwwPKi5taWNyb3NvZnQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1t7qLFfUQ0RSf4ab+sefvW/5sb0VI074sJaRsY0D8nW3zYjJJFGQ225zuURGx8CA5awJgNApq/F3XT+LZhtQlaHtctsK1tfq1zCK1EpcV7oYrM57qUOyjxm0e7MpRqmEcF5zWkUJwllsNJfenIqmPBe3J5XQD0+dgVg8dLggdOtzZtuzXOkAlQex3Wroqhv55drzmcFvbOKyDYy4dmTfWAONqFcFLIIDY2WfaiX7Xsu34ULcOdp3KwkeCJXoqaNujlvqZ0C6B/Z9Sn5oU+oR2F0sEwN7OqtEQGBSQPgLgmiqV5zUBqyof39UWZ7kFW1M3YAg6lIeZ6UscRszUpz5lQIDAQABoGkwZwYJKoZIhvcNAQkOMVowWDAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMBwGA1UdEQQVMBOCEXNkay5henVyZS1pbnQubmV0MAkGA1UdEwQCMAAwDQYJKoZIhvcNAQELBQADggEBABpxB13ATu8f/JPP5C9KznCBDCywesyPpccyuPlVTidGzwktx3VKrcqmxjLheeWIJ9cLp6/I+UV64dnInUSrVlK/J32dIsET8jhyWF0i1PgRmb71UqNWnh0UBfsEuaHnwEgO+/bDkfL/7b6fFtV6hu3BkdY3YMWH0KZUez7X5NC47EP856tvkVczCoS88BWBaDLpCmKIoZEsH0DHKxw5Cl4TQa4BWoWfs1Ex82oUbs2MxJq725KcOBpDkFo08PZylw8ITMqsL8NR3kgm6WQy/V5o+iSEc5r3p4bGvRWXxDDewsAlgwdQ53zo5b2j/T7EfRz1RsfP9zVJPOJXQtAzfhI=","cancellation_requested":false,"status":"inProgress","status_details":"Pending
        certificate created. Certificate request is in progress. This may take some
        time based on the issuer provider. Please check again later.","request_id":"cc07f0d78a5541f397b9f78f0ea8d066"}'}
    headers: {cache-control: no-cache, content-length: '1343', content-type: application/json;
        charset=utf-8, date: 'Wed, 04 Dec 2019 20:05:32 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.883, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultlgwvlc6ztlt3hsizr6s.vault.azure.net,
        /certificates/cert-name/pending, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b6 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: GET
    uri: https://vault.vault.azure.net/certificates/cert-name/pending?api-version=7.0
  response:
    body: {string: '{"id":"https://vault.vault.azure.net/certificates/cert-name/pending","issuer":{"name":"Self"},"csr":"MIICyDCCAbACAQAwGjEYMBYGA1UEAwwPKi5taWNyb3NvZnQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1t7qLFfUQ0RSf4ab+sefvW/5sb0VI074sJaRsY0D8nW3zYjJJFGQ225zuURGx8CA5awJgNApq/F3XT+LZhtQlaHtctsK1tfq1zCK1EpcV7oYrM57qUOyjxm0e7MpRqmEcF5zWkUJwllsNJfenIqmPBe3J5XQD0+dgVg8dLggdOtzZtuzXOkAlQex3Wroqhv55drzmcFvbOKyDYy4dmTfWAONqFcFLIIDY2WfaiX7Xsu34ULcOdp3KwkeCJXoqaNujlvqZ0C6B/Z9Sn5oU+oR2F0sEwN7OqtEQGBSQPgLgmiqV5zUBqyof39UWZ7kFW1M3YAg6lIeZ6UscRszUpz5lQIDAQABoGkwZwYJKoZIhvcNAQkOMVowWDAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMBwGA1UdEQQVMBOCEXNkay5henVyZS1pbnQubmV0MAkGA1UdEwQCMAAwDQYJKoZIhvcNAQELBQADggEBABpxB13ATu8f/JPP5C9KznCBDCywesyPpccyuPlVTidGzwktx3VKrcqmxjLheeWIJ9cLp6/I+UV64dnInUSrVlK/J32dIsET8jhyWF0i1PgRmb71UqNWnh0UBfsEuaHnwEgO+/bDkfL/7b6fFtV6hu3BkdY3YMWH0KZUez7X5NC47EP856tvkVczCoS88BWBaDLpCmKIoZEsH0DHKxw5Cl4TQa4BWoWfs1Ex82oUbs2MxJq725KcOBpDkFo08PZylw8ITMqsL8NR3kgm6WQy/V5o+iSEc5r3p4bGvRWXxDDewsAlgwdQ53zo5b2j/T7EfRz1RsfP9zVJPOJXQtAzfhI=","cancellation_requested":false,"status":"completed","target":"https://vault.vault.azure.net/certificates/cert-name","request_id":"cc07f0d78a5541f397b9f78f0ea8d066"}'}
    headers: {cache-control: no-cache, content-length: '1261', content-type: application/json;
        charset=utf-8, date: 'Wed, 04 Dec 2019 20:05:42 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.883, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultlgwvlc6ztlt3hsizr6s.vault.azure.net,
        /certificates/cert-name/pending, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b6 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: GET
    uri: https://vault.vault.azure.net/certificates/cert-name/?api-version=7.0
  response:
    body: {string: '{"id":"https://vault.vault.azure.net/certificates/cert-name/8f01a8de94bf4d97bca716d71817ffd8","kid":"https://vault.vault.azure.net/keys/cert-name/8f01a8de94bf4d97bca716d71817ffd8","sid":"https://vault.vault.azure.net/secrets/cert-name/8f01a8de94bf4d97bca716d71817ffd8","x5t":"O-pN4u2PDHci07m-TUV4io_mZu4","cer":"MIIDWjCCAkKgAwIBAgIQS5ZQXDv/Ts6ednkFMogSLTANBgkqhkiG9w0BAQsFADAaMRgwFgYDVQQDDA8qLm1pY3Jvc29mdC5jb20wHhcNMTkxMjA0MTk1NTQxWhcNMjExMjA0MjAwNTQxWjAaMRgwFgYDVQQDDA8qLm1pY3Jvc29mdC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDW3uosV9RDRFJ/hpv6x5+9b/mxvRUjTviwlpGxjQPydbfNiMkkUZDbbnO5REbHwIDlrAmA0Cmr8XddP4tmG1CVoe1y2wrW1+rXMIrUSlxXuhisznupQ7KPGbR7sylGqYRwXnNaRQnCWWw0l96ciqY8F7cnldAPT52BWDx0uCB063Nm27Nc6QCVB7HdauiqG/nl2vOZwW9s4rINjLh2ZN9YA42oVwUsggNjZZ9qJftey7fhQtw52ncrCR4Ileipo26OW+pnQLoH9n1KfmhT6hHYXSwTA3s6q0RAYFJA+AuCaKpXnNQGrKh/f1RZnuQVbUzdgCDqUh5npSxxGzNSnPmVAgMBAAGjgZswgZgwDgYDVR0PAQH/BAQDAgWgMAkGA1UdEwQCMAAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMBwGA1UdEQQVMBOCEXNkay5henVyZS1pbnQubmV0MB8GA1UdIwQYMBaAFIueoTJvOODf0dV7kqe4guSOHMzXMB0GA1UdDgQWBBSLnqEybzjg39HVe5KnuILkjhzM1zANBgkqhkiG9w0BAQsFAAOCAQEArII5Lbepr6vuikJ1NLzRa0yyAE8MlGvrxwkr75n3UmPFmqzZ8wpmDlFPvlwuoHgbs6WroyfCgLE7xTmFMxz8Vq+3WR+P1qJOsuGmcVudEINWlD1+IIHNcsgG/dOIegQLtTwN1giuu7X9QnPcgCp3iQDYQpuYAu5GvKP26y83g5agsBe9b8diah0uLlcp4fKfg46zMyLNKcHwyicmzr2ca9172WgPR3YLIAsbjPIFKNR8HuWot9RZKa7SzNv5rl33mmV1wpQugXD4tWdj87itKLpNrtP7rO1Dq7FJwiAckUjgDVgRgrfR8SpGDYQjOola0bSNtIXJSka6O49xm09Umg==","attributes":{"enabled":true,"nbf":1575489341,"exp":1638648341,"created":1575489941,"updated":1575489941,"recoveryLevel":"Purgeable"},"policy":{"id":"https://vault.vault.azure.net/certificates/cert-name/policy","key_props":{"exportable":true,"kty":"RSA","key_size":2048,"reuse_key":false},"secret_props":{"contentType":"application/x-pkcs12"},"x509_props":{"subject":"CN=*.microsoft.com","sans":{"dns_names":["sdk.azure-int.net"]},"ekus":["1.3.6.1.5.5.7.3.1","1.3.6.1.5.5.7.3.2"],"key_usage":["digitalSignature","keyEncipherment"],"validity_months":24,"basic_constraints":{"ca":false}},"lifetime_actions":[{"trigger":{"lifetime_percentage":80},"action":{"action_type":"AutoRenew"}}],"issuer":{"name":"Self"},"attributes":{"enabled":true,"created":1575489922,"updated":1575489922}},"pending":{"id":"https://vault.vault.azure.net/certificates/cert-name/pending"}}'}
    headers: {cache-control: no-cache, content-length: '2422', content-type: application/json;
        charset=utf-8, date: 'Wed, 04 Dec 2019 20:05:48 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.883, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultlgwvlc6ztlt3hsizr6s.vault.azure.net,
        /certificates/cert-name/, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b6 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: POST
    uri: https://vault.vault.azure.net/certificates/cert-name/backup?api-version=7.0
  response:
    body: {string: '{"value":"JkF6dXJlS2V5VmF1bHRLZXlCYWNrdXBWMS5taWNyb3NvZnQuY29tZXlKcmFXUWlPaUkwTXpnMVlqQTNZaTFrTlRRM0xUUXlaVFV0WVdVNVpTMDJNVEJrWXpNNVpHWmhaamdpTENKaGJHY2lPaUpTVTBFdFQwRkZVQ0lzSW1WdVl5STZJa0V4TWpoRFFrTXRTRk15TlRZaWZRLmMwMXU3dzlqR0IxTjNzNUVUYzVneHl4OENnYnpRODljYktQQklSYzJqMUgyX0Jqb0ZnRW1tYTNEMFd5MEl2VWZLQ3VBa0ZqQ1ZFSkRvME9vM0E3N2F2OTFRSDV3U2Q3dVdpZWZMWFBwSXYzY3R6dEgyWEJOakEzY0tnT0s3TlhIalI3QzdRN0NEcV9Lc3FGbEJTZWRveFE3dlpoU2hrUmNJMHVxU0RaX2t2eEE5elpFRkZ2ZWlHRzhremdnRUxNXzdjTlNuSWF4alg2VXFYaFo1OHNVSVhpTUZVRFpqSW5XZ09MTDFVODA0UURmd2hNbUJjdURQZkFKWjdac0JXak5aSk9JMElFcTdRaXdaT3hLZVlQOWViNWlfYnVsUElBQkE5TjNfRXA4SlVvVTVEY2lUcFJhb3NxcC1FN29WeEhDa1Y3a3FuTUkzb1FGeUo2eVU1UHNOQS5oRnc3blBmczFXT2hlSkJZenkweEdnLjBHVVVyWnhpazdCbHpDam5jOXdPOC1LVU5wOERibXpaWjJIeFN6TWdDVnNIejRkeEs2Zm9wNjQ3bFU2eVVaUDNwc3g4U1o4OGF5TFI5MlJEbUlEODQwR0ZjVnJCWm1oclVVaFF1WXJxVVEzaWNIY09KdktyeFZhdVgtYWY1a051MjJQcVBLbC01QnIydXBWS1lkbG9hc21FTDByN1ZHSmxCMUJKR19lby1OdzhJSUp6dFZCWG1vWE1fdVF1TEJPd1RwUlpucnNGUTY1Mk5qSFFyaEptNlMydFpiMFdaSTI0YkdtdFEweHhvcWd4cDkzV0xXZUV2NzVBd1Z6UklRVUhJc3pRelVxbG5QbUpkQ1VONlplbk1hd1FXdGtrcHVaY1ZBbFQtWHZpZWdTTzZZckNiQVJ3SkZLYmxzUHJRRHNEa0wzQTREcmdWTmpseldFYTRLVng0TERJX25DWHNmMDg5U3Y3amM5RURCSlJiclVWekZHc1pTOTlPa1ZOSE5zS0l4b1ZGY2RnZE5LUFpOcDE5NUc5cWFCQWVnbG5lYmJyZ1V2ZGs0cTlMeEpvMFpzeDFyc2FxMFVybmt4eW41U0plZ1FzWmcyaGxZNkdyX2owOXJkNDVINXNKQlRVdnQ5S2F2V1ZzUDBJLXAwT05fQktsSXlVcmlqel9NOFZvZFhobV9kX3AxTnBzeTVONm9KMVVVMm04Y01OSlpfckEtejh2MDB3aXRsUmhxRVNrb0NmNkVhRWFJVmpOalpSdTk1amxGREVTQlZ5M3EyMXI3aTRkbVR3RUhWX3dJUjJyeXgxcVFkbS1OUTJRc05GNC1CZ3oxNGpTMmJIQWdNanZXTHNaQWF0VmZyQmFKWjg5bnpOeHNWNlp1aTA3ZzJaMGFNMWh5YWJUNEh2X0RhNVlwYUpCdTNIOXp1ZFFocl9CNElKcFo2OVcwaUtjR1hxc2pzRTJqYjRLVkpIM09iWUZLZkZwaEhwaWdEaVN6ZURvLUE0bE1uQTkwUC16dEo5dWRQd3RBcGJGUUNEeGU4bHo1bjdaTzdEZ1p5dHVjeVVSWGlkaDVYY294SElTNVB5V2ZiTFV1YzVwU3FIbkFaQ1VxUmY4bFozZVp2SS1kZTFadVJ1R2Fzblh6cVFyM3JWRkxyZTBOd3ZHV3FpYXBXcW90Q0FWcFE2YVhOcDFpcnJYeUtQbW5HbUt1VmZ3eG90Xy12MXNYdjNSZzU1TFdGdFhnN1YwUHV4UGJFMVlCcDUyaWdaa1czQnJKUUJlR0ljb3NqYVpVemFXVkVmZ1l0U1BlYTIzMkRRYklLLWQ4UFQ5U05KanUyTDV0WXhfdlNVbWFYT05Qa21VVWZWd2owNTJfY3FjQWlENDRUbDlUNjEzYXRjdlpuVDRoQVNzTEp3c21OUDRHSmJWbWRBekFSOW9kMzZ3bVp3d0xzakxHdHNHcElsLU44c3pVRWVYcENLVTlVMXJKbU1qTW11MHJSdFItYXJfVjRZc0tXcjBtbzBSZ3NXYkhGbTlKR1o1Q0FrbTJOYjJRTm8yU1VSQjR3VkxmTFBTMzVMUkxhWVZBSjJraWJnUklYTUZQUUF5Q1p5RGxCZkdoUmc3UHZsVVRoT2VLVlZ0WkFBWndTTnhmWjBacld4d1Q3SENYSFRtUTZTc0RzakpZNGhraUloSkx5Y3lvazdoeHd3d2luWC1fSTJiS1JsbjdwcVU4QUkzZTh2SzFETlBvLTkwRmlUTnl3dXVDWVlWRWk5T1ZaaC1LdUFUS3ZNQ3NRUVctcWdxYm82VFU0T3RUWTEtSnR3MG9kdTF1cXRpZmJoVkF1RzVmRUZRZWZZcTJudWNRNTVOOXNod1JBR0ppSFI2bW82QWRmZlhLMTVyRW55TGxyRFZ3SzZYaVhTTUV2SWdUQUF4V0NGTFp2YWtKZ3VFRjR6UjJ4eUZpamltTTRuelhZOW9RaGQ4NXZvQlNtVktxTEFVWnhtb2VUV2lLUGJfQUpwalgzYUp6UlVjTl80OE1qTE9FMVV2OFBjTS1lVGZrZFBBYUVFc1J0R0xuVHhkWF9FdGtTcEhhOHhndkJrbmxFSFdGSkpnWDJ2UFZSbzhwcnVvNEJPTm1mZHREX2VCZEZ5NkRqeDZTRGhWLUZpUHJYUlM5UzNUVnBIQmtObkV4dXBkZ1B2MXhEYkVDeFZmVWl3TnBnbkE3b1BKa0Z0b2o1N2V1ZTZzbGZEOTZiMEJSZjJmZWp0TWNlMXo4TDd0aU1Kb245dUZBNWtZb0lXbUJnaXBZWHFYVXJtZUFaZW1DdWhielo3am1XT0otLTJzajBvaG5aSW5hODVMR09DUGFFb3QySEVUa2NzbFdxeFZqNjRxWG42ZjJSbFNaYlhJdDNoUlltUVpvaWJkUXRQMGhmN0ZDMWw4MlQwUVVlOEVFQ240RXFEYUplOWMwWmtHLWNrdHhPaFk2LW1sNmduUGJHTXhSNlVpOUh4OC1zbFBYLTFGcFh2Tm5jZ1EyU3VlUUJwbGFROTFIS2VRQlNKbGNfVlItSFY2YUlYeGFFVzFYNG5RdFktZXJpeVVkM3NNcnVtek1ESjJPWnF6eGhmYkM1T2hxYUQwQTlWbmdreS1idjZtSEFIRHFjVXRQZlhqOEVGdnJtemZzeDV4V3dVWFJuUzBvZTlNWW1SWllONVRUZmZDblpYQXVyLVk0cVFmb0dyOFl6R1gtbHZpNi05V0g3Q1dxQ2VwS0RmSzNSZWJIcjJjeHZnVjJpcm5hN1l6OEk1NXRON3ZGNU0zUFBQWk1mcHlDQTZ6VF91Y214WDNQbGc5dVFGNV9xbDJtZy02TWZLYkpkcUZCb19ub3VIUEgxTjNBSm83RmhfQmZGcGVjUXdYT21IX21jQXl0ZXROOTZuMmszNzlJUXB0WmF1QW1Zc0dmemNlZW5JemFJY0lRX3dDS2dPTXR3YmhOOGw1RkpKQm5FT3dCc0JKbzBidXlfZVNmc0xFYWhmY0RXQmFVdkMxT0xkbkRzVzY0RVVPMXpCdUhCNFdJbUI0cldTc1hxWmVTVjV2OGVfTEJXRTBYcndibHUyMVBVU0JyN3N4WVM2dl96dU1QaldKLWV4ZllFeUNVTzNjT0tnVWkwZ09FazFZQWNOZS0tdmFiaDE2clJmRVJ6YXJyYmpORzBFbHlMSWFrSjZxbjdTQVNMSnd3V3NYMWFGcHRqSWstN05jVVpVc0RSdTVVcWhVZ2s5SFR4Ri1LeUM4MVRLLUF0NFVFb3owdXRwZHZ2NnRRc3F4TU03X01HdThQWXJqd1phYkFzeXB2WG13TzZXS1RWSU9ZYm9CQkFWY18tVEVlOXVwY25uSUZKa2hzdHZKQ0s0aTdxdkxsU0JiUHd1Zlp6dlZNUGpHcXY0alFwdTVjQ3hRaF8zTHFSdnVmeUU2blUtWGVDMGE4a3paZGdzYlpUR1ZtaGMxdUxvT1ZzWlBEZVhLVldVN2ZVYWN4bE16eVNQeG8xeUVrRjlpVDhyV3hKeEVhUUF4T1FWQTJfOWtHM24yZnQwQ1hwWjE3VUhvLTZyUWlmM3lTNWYzZUNadkNlTmRBeW9PcUxseFl0bklXOFBIaVpHZllnQzBZSGh6TGg2NHdNazZkalBoWXpCb1VGS0ZxaHBqYl9VZDRQblFNV1VGdXJfYUIydmw0MlR3WjBiZFB1S016YWxqOWR2NE9wakNvZHFEdVVaMXM0RjlTZklXZXdSREt6VXBTRl9VUkl4LWV4LS1uOVpxWmJsci1tOGEtWTRwa0JzMVpFUjJBM0Z0SEstS2cwR1JwZ25vcjF3ODY4bzQtbEM4bnZ1d3lkclpOdFBQWERjczd1YXlRRUlQbVJCaGRoaDcxMEVndlBHRjlIZUgwM2I1bTR0Y2VPV01kOXRybkVLOFB6MWEtaUhCb3NCWnVNQUlJemhhSmI0OUZYY0lhaHludjd1UEM4R2o3SDNHWkdSRGxNOVpSVjVKNHIyeUNTeExuQXpSUzJ3Z09yOEFVajY4anhKdENwQVgtbWlGUnZnTUppZTYxQnJGd0p2SDZVNlozSk1EaWpqNmpfdlVSWnE5S01KWWdTbm41SzdjTVAydjFFVXBfOUhBcWFOaENJTy1LaTZZdWRtZ2N2NklFUkRtZHRvTkpxOENGci1IWTZCeHI4Y0p4RzE5eGN6eTk4UVZUT3Z4SVFpUktSLUhzTGROYklDbmlrcHpDVWJSM1o1a3lFM2M5TnhqYVNjWVBYd20xZGc4NkFldnp5M2VVajMxQlRuQmdGWWlEWWYzZnZubk1MeWtLcGkwNlNnTjBSdjVQei1VdnJXOVNIZ0hieU5OU3R4Y2dJLVkyN29CRkJoMldfeG1rLVZ2TWtmOGR6bkhLMkJmd21RMGR1RkNnTVdlYlozanB2b0N3d0xDZ1dmRVVCQjJvX2JpZXZXQTROWlB6T08wM2d0TVpuN0p3Vml6QXA0alE3dnc5RGJrcmVQWXhob1lGLVB0ZjlRTV84YUdsWWVxcF9iQzRpa3ZmQ1hKOUJNT3Q2OEpiTUZ1dWxwZnRYVk5pMFhNcWJQNnRYYmozcnc2b0R2d0NyVVlOZGhueUt5akY0S0xCRFlSSnF4QVBmWGNIbl8xTGJaY0M5TFBBaWNGMVBQblVSU1dUMDctMzRqbGpoejExZlo0dTRqR3pnekRhdnBqWk5XMXNFUi1vekJmWk9xM3NRX3lQOUY4Vk9PNDdsSTh5Z3JjbkpZZjJJZE80VGNYclVPSTc4YjNlLUZlWGRBRlZ3ZmRpc19tRC1pNXNsS0ZHdW9ZNzdZT256M1JYRDZ6STYxaUpXSEhNbnI5eDBlTF8ydFhuQVdBRWx6OWFObE9TVXkwYVdkbXphNmVpaGZ0VnZKUWJCNk8yeWdPNDJXTkkySEpvd254dXRuYTMtTVQ2RFNuMkRrWXNUWTN0Sy1BdVpnR3FoV3lhRW8zcEJoWUF5T3FJUDRNa1BDX3NvbWlvMmZIWWtUeTA4bVl2OE1EOUdBOTNPS0V2YVcxcnNQSnBiVjhscDJKbFdmX3Q5TWZjR3BTUzFtZk5LdzdidUpPeGpIbklRU1g4cE1PSUxTbkltN3lHaEl6UTVLVXV2d0JDUEdMVDYzY1k4a2pmOUFLaTNFN0hmc1VPS18zV0k3ZGFJSEpPdWludUZnTWd2cDRESGoxZmNXTmZ2SU9qbk9hVk5BLS01OUpJUXhHLUxyRlpDS0JMWnZ4ZF9ESmk5SjYzeF9YVlBVbE5oZ0xZd2J1ZnY0alpIOFdIbzE5ek5UWjhtdTZoTUdzTFdiczBycWpZYmJ2YjYtMEt0VHNqaDdpTVRoWkwtc1E0UlVuZ2dEUm5VQ1huMGZnZjQ1OF90TTRHcTVibWxiSHpmNldSV3dOYjROQlVHZ3Iyd0dwbllvODlZV3M0b1lDN091ck9kMVFTajgyNWR2Ym0zQUNIeVpsNXRDWEtMQnQ4cG4yZkJPZ3puVHRGNVFvODJub2QtcGhBbUMtbnJhU3hRb2NEeEFSam90RGZQQlRBbkNwbHpDdGlxQ0hka2pOVDdnaVQ4VjQ0OVgzdFUtdndMN2ZTdWEyZ0hHUWQ3QjB5eFVVd2M1eW9WN0dfTzVzcGNfTkhDc19DQURDMXQ0VkhnR1NCMmdybWxLTzc0cDRoNWkxZlFJWHRUb1lmeXJxck14ZVRidjVKTmxtczBLZTR1OUlMaW5maE5uOFQyeFpvWmR3MmZDQ2w2Ym90NklodVk0QlJJZlRsQzdmRGdBQTBMU2V0OUZGbzBEZzktOUx3UHhrVk5GcHVOYzZRa1djdFRBMVN4R1dQSnN2Qk04WjBrNGtWcF9CcnBvaEJpY0VncDVQdWRnR2lTRldnajFsdFcyVlh6V3hxbHZsQlNNckpYQjd6WjdZRUFKbzhWMXk2eDhiby0wVGJMdV9GNWtEZGRZMVZjcGtjaFdLMjI1eExIeVhHVnk4TGstVi11aUY2VkZodWF6V05rd29yRHZvTGpuY1gycUtYY3N6Yzh6ZnpleE1WZExXc1JJTWRaeVRDM3NxYWtBQ3JvMzRhc3VNRmNMZzB0Q01qV3NVc2l5d2VNR2tXR2JXeTczYzFvZ25CVW8tTExKbE9LaWR1Rzl2ekctdUNNcTA4b2JCZVJ5bERfanAxbDd6Q2JlZTlXRnRWdk9EZUZNSVhSd0lYQzF6M1JaaTRMU2lybGwzd01EVEo3aThiV001WENPYWxLbmRXMFd4bWNyOVJoUTBQYWI2Zk5ybDdFSHJ5a0JWaHRVUTY5QzdEWlkzdjVENk5EN05pVlNEQ0ZyeHhmZDlKS0JyWlFNdTdLOUpvXzdVcWNaTzhobWV5MHRZanN4Smp3V0h5eE5EN2p6VnU0aHJVUm9uZm9hcV85alc0bXdtd0p4NXJROFBYdmpBb0NaS1pHTGpYVlhzdXpyTkJYN296bEc5M1c1T1BYMklOX3dXV1FoQ3psN2VuYkJkWGd4RGxIU1U3M0FRc3lRRnJ6UXZyZHZ5bUs5S2p6cmlWSWZYOUg3N3pjRjRveTdiZ0dVaVFWLUZiQ3M5dU43bHZqUnZFemlReXItbEpKd19ZV2ZUTXJkbGYxRHJ2NWlYR2J6b1MxX19idHp4VlBIbUVZUnlQS1F6VHV3V0N1b3FUTXFaWms0YVZhRlhKYndzU0lXcGF6UlVBRzRuSENOLUwtUDhjTUlmSnJDdmdEUnVUd1FaMWF0ampBc2RMU2FDSXFSdlkwaGtVQWl0aHdmQTI5bXlta20tMUdhb0lmSW9KLVctcDJoY24yUzV5M3VQZ2NISUplQ3JITzcxMzA1YjBnOHNaV3BFemVtLW03RC15SnJyRUo1bjhIS3FzZ3lLNHNQODBrX1k4YW9TNWNybzZXQ1ZBdGRQeFNlQmlXUEJuV0JQdmN2VWt0UkQ4VlBUbTAxcjNLZ2xHMUx1SlFMdXI0clhjNGFEeGtLM0xnTkd5SXJxM3MtZHFNdl9BbDR5X2VBUUtUc19hd0NQbzE5eFFKT0ZhZ1g0NHFYTHRqbWM3UWZTYTdlQURfTEJJY042YW5vSko2MTBPUTJHUVpHbnhXZTg3M2xNRV85NDIxLXQzaTRHNXdvTEpoSV8xSEJWYnRBVERwNHJyX0d4dGEwRF8zRnNHdE5JX01iTlVWNUdQdGF6OXNtZVFxSXdrOVZSODlIVmo0VC1fTmtqY0VIRElNcEdTalItaFhnUU5aak0xMGtYbHBhMnM5d0ZPdEpSc0dHZFhNSUVjTlRzMm5JMFN3bnJBcVhzSmRDVmRacWkxWDZKaDZaTUlfVmtKbnNfRTRJdjFMUVlnYmllN0E4THp6X19rQjBtQ2ItSkhUeEE2cFRLWlBIVWxjWEstX1NCT01XMlVGd29VU2ZiM3dDWkJxaXhEbVJKNHVycGRLTjdsSmw0Tlp0LWxiN1gtOElvRlh4ZDNwWmhQZjZSUEJEUFc2NlQ1R2piNFNQQndjMURVbXpiSDBqZG42ajJEaTVaSThlbFBjRE5QeW5ZT3NMaWxmclAtZ2xydlI0M3FVYXprSTVGTnF3X2JIWTd2ZFVoQkx0bHdPRUlfWjlIQWMyU3M1SXRqYmplWG94YU1mQjJycGhZMG1sLXNya2Z0b3BCaWtIRG9JZkFkV1FqWUlwWXBLdGVFY0M3TWJFWHRkZ1NpQWVYdWJNbzRGY1NMLXVyS2YtNjd1TFVWN1gyTlF5X0dQeGtiUXhSbVI3XzZlZlk2X183bDVyeUVFXzZpWmo3ckh0WGx6bElqMUgwbEZmWjVlQ1laamQ1cXFPLVFBcUc1RmI1d2lXSjV0b1FOSEE1RG9HMENSRk8tSnE3dDd0VDl6elU1ZHZFc09GSllubzFwam1xc3dmamVlNFJqUzBYN24wanJIT3BudUdXWm9reC1KekVxbjFLQ0Z0S2lIMHZtd1Nzd3dQWVRxZm90alAwVnNtVmVhb3dIU1ZiVHBRRlAtT2lheDZRbFdaZmxQUmtWTzRnbXpaTWpNekhpZFhJUUx1N01rWVkwU0tGcWNzUzNYUUNpNGlVQ3lXVWFSXzhiSzdqWjVtanoyU0xJN2gtYmpoXzl6RGNlb3NvZVZrSHZ6R0pqTGc1c201M0NSNkN3WF9LRHdyU3BxeWFkY0czd0VpSnJDaVBnbURZWTVNYlhpTDcwUG9uUWRLLW8yb1ROalVSMVEtekVCN2w1Z2tUTExNSVJEbFVzTWc1b0JUek42TGpzWnEwQV90RGJCTFh2UHEza1dtY3JhbVVRVnpPQmN4QUNnWnp5NVRhV0EtMFBNYk9BUHNpSWN3cUtSMmZkWXRKZnYzMUt3THdEZzI4QnFzOFJCSUU4ZkJQSW0wNDktR2dtc1VaT3RabncwdEkzakVJdnhfOGplaG00U3FLaVZyNWhIR1VlUUZEV09fcnZCZGNDcXNuc3RpNFdyOG5BZWVCYUJBLVFsMXhUcmV5YVhHRWRlVmxuMXRmaWQxLTVGOGlFQW9DbjhRTDlzR2RIVU50RmR1bEU4cFpuc016SlBwTkRnaWptUU9zOW9tTlo0a2Q0M2FkZFpUb1Z5MjZVT2Y1NXhhbTRUX05peDRNNjQ5LXRVcnI2b0ladURJdXhHd2sxRGxfQ01vSktXNl9UbkhibVpkUjBZaWZlRVprc3EwaFJWOGVlbXE0UlJydDVwSHg3RU5jaHUtV0cxZFlqOE9WYWs4SFJYZGdxRWNxRk5vWE00WXNGeVFoQkdNc0JraW9SNFJZZU14LVpIX241UEpLald4S0ppWVdHeUNsZko1aFJUN2lhNlB2eGR1UlhBT2dSSUZMaWlzb2l0YjlGc3ZJaWJHYUVfZUVoR1NPczlpRml6QmMyNlNBQTN5NG13ZW5KUUQyS1pnS2d1RTZ0MkpnWUh6akpsRk9DWlhwb2NBRk9PcFQ2YlI0STFob3Q4SURlVGZFM3lod21FMXBFZl9oYmFFb2VRTFk3YmhHTHpXZnp5UnB5cm0yVmxPQmRzbWdPNTBvb25kYXdERm1HV3FXd1VJQzdhcGFWdEhpMG1Zc0RSQnlxX3N2Rm1rZ3pqNzBrTElyblRsRnNVOG1jYWduX202RUFFQlYtOEFKQWhWOTR3cnpld2ppYjhBVGtMekN6UVJJVUpBUllUb2I0TzN3N1BWRzVKY0RSakdsdG45X0xaZlZxTEVsZUFDZzhMOExvalR2VHFQelBfN1FOSkZZd3JLOTAyQ2RIYjU4VWdIUmtpcEcyLWdZaklZOW9xRDhqNXRGY3BudmlBM0wyTC1DVExSeHZfOTZBVVZaWGlpODR3dFp0eVNQSFAxMXJMbnRDV1FZbGFkQTJ3ckNjY1hFTDJPRVlpc2FGLS11Y21UTktUeFdxSGcwUTlzUkFJYUNyY0ZUV19ySnBjREt5VmdqdUtXejN5MFZPdHRTX2RfcEdFSmF5a2tEMEVid2VjWGUyOEM4V3RaUWx3bmxCeFFwNjRwRjQ2bmNRMVFZWG84a0d2LXRYRTZVQ1FWZWdGci1EVHpnWGhGNEEzNWUwXzZoQzBlX1FpLVN6M2JOb0pNYm9ndGU2N3lsTkhVTjd0a2xLUkVVLVNXeXQyUHVYd3g5SDdKV29BWGdjTVFjaHdiLXd4aVJtMzZYZEZqZ19MRS1OYjdGMzBkU0NoS3o2NzhFbUNKVFFBVzRMd3FqcnJibFAyaFo0ZWYwR2ZLRUROUFJaNWZYMFlkZllzbDRBY29VZjcxRzY2d29MZ3NURHhCVVp3SjZMMnZoTEp1ZVNfX3RKcWlJUDBtakNycm5XNE9LM2I5R2pobTVZd2hPb050Mnk0SW5JNk9FeFlMLVNySzFQNmNHdC1oeU1Vc2xjWENnWGR1b0dJeml6Wm5vS19oTjlBeHRBbE9lcEl4c3JlLUpONGFVSkppWHdQWkRGZkpHV2lhRnY0TDAzN0pVbGhWb24tdk5hdXF3Wmc0dEowamdsdjVJQVNsV0JQbl9mekFETVRwWGlkRmZ6TE9Xek9ZZ1JxVFBGV1Z3cVNXUjVPVGxZMl9RYWg0UlVDVzd1V1F5RXRSNWp1bW95TXQtZURFUDZCZDlDYlVKOXVpNUxjZ0JUWEdqa1NCNUEwWmVDNUZBdmV1aG4zSXZEY3V6b3RPZjBFeDI2Q2VuZG9scGZ0dVhZYmNQOE9ZRlpmak8tOVRGVWlYQ20tZnM4VzJraEZKNDNRMl9KaDZ2cVBldXhwbVZiMUFCMjh4Z1ZTM2R1alB4Qm9abzY2R1VkckZTdnQwZVo2RXl4ZGw5YkVveHV1ajFDMmNIeE5kbU9kRFRYenBGWi1ZN0o3a2JMNmdkaUJrZXJENzl3dEdnbmZLRmdXald2aGVoV0lRczVDdEtQSzVjZGtJR3RwYTI0YmFUS0JYb3NjcnMzU1QyWmRBWWU5M0haY0RGMS1PQ0d6WWk2dlVIQTZuODZjS0JQQjl0VXBxQmE5OGstcjBoejN2b1lTckhqQk8xRE9DUUJvQ1ZLSVdiTWJmU2hkSEgxSnBYOE5OeEhCcl9ua2hadnZseXRQbHBpUmRORGtmenlpVkNIMXN4LUktdjdKTEEwaERaNHJITFRPXzlDUC1fU1NtSnowWWI1U1lKZjRsRlp0OXlFMjhqazdOYmFYU0M3cGtPOG5qaWZVMlRQMjdub3AzbHdrT1pleF8yTS1EcHV4SnZQUXRTSTY2c01TYmg4aHcwdHpRUExXaU5PcGJKYVdIMWU0YlhjUjJOMzgzbHd3MDduZDhvS2xjaFZkX19ZaVByX2ZwcnFqcTJOdzZPdTg3ODRYOU5RU1Q1MlRjSjdORnNGTzhabnMtQkVlZkFRSk80YWp2Y05TOHktcUxwVnhEVlpUMjJpTmp1ODdRSkVkbnVxSGxad2E3LWNTQlJYdi1sQm9rSmhxMDJGRXd4OXRKY083WFpIbUxLYXRCdjgzVnh5R3JyZ0VCYUwzb0VhbUdKb3JYTXJjdFk0VzhFRXpiN2QwYURTeG1NYmtoemp5aG1SRGt0dXcwbEtEWHQyaU9wZ2xwUDdxWWMxdXNqQ1NMQlYtMVRXTWZkMU5WdjN2Q1RuTl80U0dtLUt6a3NsNlVjZVdacHZvU0NxamU3bENZMmM5aUkydkJsZHJpSG1IVmM1MlVVcWZJV042aGhmNXJUOTRRc3MyMEx5ZmxhMGdyOVpDeHBHMXBmZWpBS3NNRE9mLWg1UXhBRE0zWXp5WXNQbGl4STctTXQtMldmMXBYQndKa1ZWdGJFYjJKWHRFdmZRSEtFdUZLRWE5V05vTlFXUGZsdkFIYWctRXZfVUlwT09lS3ZKVE9wakQ2ZXhLUzZjMnd4bHhwdjlCQVNib3BybC1PbDZ2dVNYNURaOFY0ZEhBaVRmbGtkZkc3dzVlbFFyZXNteElQSWxFdzJlSk9QUmVHZVJwODZwdkY0QV9aVXhhVVp5TEFqVGxad2VEek9fZGtXejVVUV9veUhxWkdCSWlzY0ZTNllFNWQ5aC05eGZEbzRKTDNjZk9Ia2hMc2hUTWsxSDZQcXVtNG1KZ1NPNHc0WFh3VmVIenQ3RUJ6RkZRRWo5bnNCNFl3ZExwZk9FUW94MFpJa1p3NWdVaTk2VmZvV05WX294ci1NS09DVGhPOV9UMkFTWl9wS3Zhc0ZBX0ZYX1h5T0tpV2Yycm1jdVYtUnlfbTN5bm5FSVdoRzVIdm42M1A1NHhVQWo1YnctRERsR3dIZzNmWDI1YUVXMVEyLUJVNEctdVhyVDJIY1BWaUVkNnVvOE8zZTJLNFNtVzZPNE5JNkpWRHlEVWRqaElON18wTG9MWkJpLUd2cTA0RGQ0Qlo2YVpNQzRCdlJKeU5EZWNwdmtrVkcweUV3ZnBsWmVMQTU1QjQxRGUxcEFZM3lSOFNEUUI2TS1xZnpldGo1N3dYLUJJZnpld2xELTBjOThmdUlFblcyMm9BSTY5RjZpa05xYnZ2MHRYT3I5WUVLVUFKblNjNVk3eWNGUFVqSl9mWFI3LVEyeXVUWnNUR0oxSnhKYXQ3SGh2U21hMDBHaUotcWxHb1JqSE5iSy1iUXRxbzRIVlgwR253QmpGTjN2bUNaZ212SEpTNXZUUk1UQ04wWUstT2s4UnlybzlDNXFQOHF3eFU3MjlJWUZHRkdmVUNUS24wSFozdW5haWhWcUxkekVvVmFvV08yVDRPWHhja2pTT3dqQnRlM2t6RFZuQzZHakl6LUkteHVNYzJleDVMMThTNDdIQ0xDblkxTGEwSXZheWUtU1RhdmE3aXN6RUVmZW9lalM5djFudlJLd1BpU3RZSjl6MTE4Z2RrbkNMQmUxS0V5RmJPR1prVy1KSWI3YU9oMU5KY2VOMF9zdklLUzZ6TEJtdW5IWFpQMWROcFNxeHE2NS1RbkJRZHhkaS1MUzZsR0pxb0dKS05CQTVYNDhORDF2VEVlQktrb1U2RzZLLTRqelNzNW4tZ2hQOWRtYXdlZExaYzc1TGJHRFJhT1ZyX1dXVkFZLXpDZmZ1a2h2U2tpSHVBNnEyZndOSG5GTHMzMkdfT1gtTEJoWGZTb3AzWkpSaHlMREZLaFF5Tm9yeS1Xb0l0M1VJbVJBdkx1X1NuYVVCMHFvRGFnS283TVNWMlF2WEZwZG81ZGtKaDFsVGtnR3l6dnNDNkN2X3J4NzhFN3djNE53YzBtSHFaOW9RYUlTeEhBa1NXMWZjNUIteDFfTUx6N1hGOFp2LVZmaVhxMUVieXJUVUxubzA5ckxON19CMW1nRU13eENicE9wb0dJOXY1Ny1kTjlkRmdBa2xwLWJ5bG1Ta056aE10N2trOC1uQWpjdEd2VF9HMTcxN0Z0WFNGR3lFS0haWTh5dFg0TGw0NnpyZldoOF9OSEhDYVhNX1QybFZYN1ZDb09QLU9OcHY1dUZwcWNTOEc2dkpjNzAzM1EtbUwzVEFmTHNJY0hSdU9xZjlHcTdmVXpaeFVGUjFnRHNCNjNsXzNWQU5mSEc2ZHBkdWZWNWNfdjFsMXVudncwUEd0dTRFNjFUVk96VHNqVmVMT245bTN5VmVoVk53Zkg0QWdrV082MWM5ajUxRE15c1FDTk96NTlwWmNDdkZXUTVuQ3d4UTdBcTJwVzExdzluWXhFRTNvbXRZc2RwYm5obE5SRVZtS2Q0ZGZleHdTaDRFUnEycExUR3NpV3FjeXllSm5MR1pYWG9hOUpnZFRwcG5XT3JHUUdSRUFsR2daSFRuZzlPRnhOS1NQUUlHWjNqMWpFcUNLeDZ2YWRQLW9maDZURHRSQm9CeU1yZEhwUHBDNDhLNl9GNVNObGFrNUNSMy13MGczZGdBdXhqaUJXMzM5d3lCazRrOVpmT3hDQjVnNDJ3dzg1SU8xVGd0TVQ2M0hPNUg3SWthX202X1RqRGtEZXpDcjVFV1B1U2ZNaEIydnNZdGNDTEIzVWdiWXJEWWwtQlFqblhEejJPbXMzUEZ0QnR1NVIyT2Zma1lOd18zLTVkeTJfdGpNX3JpWG5NNV9NZ0tUZEowNUZyVUxOSlY0TmNSWjZzRERrdndYZFM4V2FQaTZsOXJLc1JHRWpfTnFPVXNlY0o2dHljeWVDeEtwUUVOZlBYWEVfRkpJcjA3RHVxdmdPSTdjdXItblU1eUluRG9rVkswTjJwcjItZWFUY3BTR0xiS25sZU9Od1Y2QTloRjUwRXB3ak9FZGlHcE9GM2ZtMW54cDZ5WXVyUjN1ZEY0WjNLVFA1b19QTWh0MC1PcGhJSU1ZZHVWVHdXdUo5bldNdnNOWlA0WE1UVldEdm9WcUs4QVlTUGczWEV5TVA3ZWxaakxrVjkwdDR1MHp0QmtDQkctajdqWDhRanNuYjh6NXBjdTByUEthY3pETWNwY2FnbnloQU4yQnpNT1JHYmFnSFNOVDlZVkpDY3JlLU5meFkwYWctWUxBYVlVa2huZzFpVzBMck1pb1BMUVZoYVg5YXE3eWhvQjZ0aHdscTJ5QVF4eXB0RU41amhraklmck9kT2l5dmtPVG0yVl9TeEM3Uzd2ZnRoN3ozT1VDNnhrQmtVbFFXU0Iybk5SSkwtWlN4TUkzOFVPWFVJZnp1c25IX3ZIMDJxWDg4VHhMU2EtN05QVlh1bTQ4MVpRTnFOeGhyckU4cmpoRWxNTGVXY0hnYVhqVG9pYkthRUtpSnlEZUcyV3lHcnhIdHVOY1hqclA5ZVhqdzVxdXNhbndGNHExZEJWS1l5RndyLWExZU9wMm1Mdy14QW9iT190eTJKZU1oeU0xS3k1dFhKTkJYakQ3ektGMzMxbzJGRURscUE1ajFkTVE5akhfSGxpamp4bVhJMzVXZEgzQ2dXdUJpd2pJRE9JVkF6NVlOTFh4bnBFREhZRjdQUGNnS21LMUI0Y094U3ZCQXM3ZkNTYVJnZ296UHl0U3VHbklHNksxTU4xX3JDdllhYnY5TXphMHdHcmJ0aXcwbU1mWEVleF9feEJYVzBEVjZpSGJTcG9ZVUlUNjRGQjc3OFYtQzF4Q0c1TWNSaEZXdmZmTWYwUlB5dTVfM295UWJqUVhoeDNWRlBUMmNhcl9zaDZHb1g1ZG9GemdzZEE5N0JGVmY2cEdUTWlmOWpPdE52blJQLVFEQ1RiTDQ4UkRsSFl4ZnRPRmNwR3JGM0MzZG9QRDRHZ0pXSk9xMHFGRWRKdldwVlNlYnR0WDkwLU9hODBjY2hOZVdFT3VmaFB1NHpTSjVWVzIxSUxac0lFX2kybm5RUDNUZmZFd0FBZFQ5UVFxMVN6WjFrRDFmaGx1NnE2OENQZjBna0tCX1ZENWc1ckhEamh4NDVCbU1LVjdwb3pBeTJRNU9YdmVCRi00YnRtRXFIcDVzWlUtcm85M3NoMUtXem4yVUJGM2NZd092d3ZwYzFSMDVleUtZWFNtUGE5WkVYc3hjeUdNcnp1UFQ5TnRKaUdTQWxmQmRCWWlOS3FwNzY2XzdHUG9sLTUzUkdhdXVqOGdsQVluNVl2THY3R2lZckZvSGxKT1lJNVROOHRzdnR6TmJRQzJMcW5tdkhYTHhwUldiT3BDLVBVZFNGRHA0UGlvNWlhWTlHSUFndUpzX1ZMeWI2LVlCbWh3c3ZWWWdiN0x0aDg3aHlWT2lIYVl6OE9OSkF1eVhmNUMyckxNNlUzN21hd3JxcV9VTWM4WTQtTGh2aW9rdmlQeVlIRWFsRW1UOV9tMm13TEF4OEN1OW5OOXJ4ZHFtTFdQSmdSaUg5dDVnNXk1OEVoMzZzU0ZfVjRCNmpjZjlWMGNDdUNvR2p3UnR0R2xfcEFyUkV4M1hyWmsxakNqNWJvLWJCeDUyTGZ5Nm9EYjdpX3BnUjRFT1oyOTUyMUtwSGgzSHlrcW9wOTdLSFRnVnZwNTRISXlkRFBRNnNpYTFkaWgzaGlrYnQ1Uk5Qd2N6Si1wUmFzQXdLeF9lZzJPMW9qNXJlWUhTdUs0QTQ5bmhsdHhmTXpMU3pUdUpzOWtuSWFNMjJNZ2xnTURza09qTXBVTUttNU5xNU5Dd2xIbVRsS0tYN1pndk5pelpwdmdsTHdLU2EwN2NEMW4zVVlPWDdoSDF3R096WTBBNlpmaDBoeklndXVDMlFCWE15eEtPUjhFOEtaakNFNmdhSlQ1VE5OOF9OOUVtejlpNjRkanhQWTZmZXVmMUxURGIyai1mVjBBdW1nQzFZcEp5OS1FSVFzNVIxSzhSMkt2LWZsRWxFUjkxZlVtY0czM2dON29LbnhJQWV3WVpUbjJaZGNsbHNFZ2tlTWozRklHNENWTDBpODYxQ1dBVXJVcXJxZGhNWmctSlNxeXdQc21YVi1VcGJ5T1Fod1Y1RGM2NUg4ZTBkRWx5ZTBMOGlfalhNa0w1bWs1NDNMdUhWT1c4WmFrWFdmaGFLaTZCWnF1OTE5WVlOV1JodjVUekY5S2ttdUtxbjM1M0NRQXhiT2dEdVpOWWcyNElJR0ZWUlN3Z0t2Zl9PTnZTb3pxZHdNQlJ2RExNQzVjZlJDYUNMMnd0NTM2WHlDOGNtTUJRWHpCSk1DeHNYTWxQemtraDJvdFFibmNNakdYb1Vnck4yOUdrR2hiNDllN0JWZ2ZyblRXWmhSdEp6dXZCLURHVG9RdlNQUk5QMGktQ3puaTBFa01PSU5wVTg5WlIySnZhQkhNSkZCT21WaktPS0daZklGUExhMUJkSnZVNXZ0alZtcWZ3NzZDUTFLdmUyc1hmS0F4QUFMY3dnWXlIYl9Yd2J5cUJ5a1NqUjdLdWZ4SzNfVk55VDd4TWo0VWQzcFdrUUZpdXJmYVNpdDJtTzFBaW91QWFucVVERHJrZEx3ZDhkUThPZjlFc1hiREZkV1JjNnVRN1BPRzZDNWJUNFZNXzhiTnVLOFBEMWctNzRWMF9kSWc0RzFwTGdpbjFMb294b1hqbkdBYUpJOEtxTml0aGhlRWFRRFNxd0Y1enMxMWdXR1l6YXdvYWR6MGFER1N1SEpmeDFKOWt6RVlodkNYbUxhX01ON3EtcUtxUUIyYlNTQ0dyRHlBMWxaV3B4YmNaMkN6MTZJUXgtSHNHMmdHbnFOd19wRFo3Y0Q2Uk5PTWx2cUJteE5Vd3lYUF9ZVHVrWExhcmRHMG0tYUhNcVdyX2tXM3UyX21qM213OTR2dXdLTmd2a0pBRXdtX0liOVZldmcxWkNoa0JTX0dVV0x6YTVVUUNuMFdURjFKSXNoOFVpLUZBR0ktNjZ5ZERyOFl0THhLa3lIWktXamVHcjIwUGR3RERZdlJwWnNLcE5SNlJjamhkUmptY1FudjRhemxLenJsQ0l1NmpXNkhRRDJrUEhDSUQyNmkySjAxdXhNYmhibGdjc05tSmpsNEwweHRDVzVTcnJzTDZBVFh3OGZOb1M0YW9nNDZXa2MyQ1FaOEU1Z1o5MGxHR0Y1WEVEd252LVlIcWdSMjJiV2txbXZhMTBvOHcwRHgxV0k2MVNYd21ZX3A3MzJWSHctWTY2N0R3TVlGeDEtMXhwX251VG9qa0p6dW5xVFJieHhXY1h0NUw4RHZUY21XY29XRnR0SnhnMDhkbjJGWk5jYVJPRmdjQVdEcDNieVFWczY4dHVrNC0wMHZSNmxPa0UzQzJuSDhTMnB6UzJXbF9HT0JOdGhqVEpMLW84X1YxcEV5MmxYYUtTNXdnRGZNcnR1TkpLMDc5a21TWW1hN3RFMEVOX2wyYTZMTTEwbjJKbzFTaGRuZDFVdjIxTVhqbVJFVFdOb0lrdURZR3JJaDBoZ1ZoTS1YZ2YtLUVCd29yX3JfaGNIbGtZa2hqVnc5dVRwek53WEV2TnBjZjBxeVNsb01sdTVoZGh1VUFhTkdvZVVmbmROazhYWTEyZkdtOEtwOTVxcU1iSVJSMTVseXR4LVY5WEJ6ZWNaaDFHT29RLXZITzdGZlJGXzZ4M2g1bnZjQ2lwWlpiZll0SXVFZ2d6NENUVGotWXZCNWNRcVhrQnVTU1dWMlktUm45ZloyelI0WGw2ZDhTUlhzOThuY09WT0JPQTIxRkxaVUZfYndfMHI5TXF0endsT0hkeTYxWHhrSUs5MVFyWTN1NWRXbXA0TkdSZkxKejdzYjR2UjVlUTJlUkZ3LWRpLXU5NXNzYnF0RnQ4MEdJYXdOMGZwRFB0ekt0TXJ3X2I4S2pSX1NpSExhejk4eFdPS0xkb1MxbGl3M3ctVU42ZzhGZVU1Q0RjSnFkeTVvTVZpeHk0NGFBYTNTRmstc0tXaWZ3eUt3TmlCUExqMXZiT2V5VE5Pc1p6ZVVNRVBRQk9CWVZhYTd5a2ZYTlctVzBjbE5UOU52SHhneFBtZFlmdkxJWV9xNms1NkxFRXRIRklZWVl0bWJjcThmeE0wM3N0Y05jRVd5TTFTeXlCMFJMYUxhY001cG8wazlqNzdybnNRd1JXM1lDa0JKN2hUOFNMSlgyUWFJWEZPZzJXdFBJMkhHeU9Ud3lEdWJ0eWViU0p1YjlOZmdRVW9NVFlrd3dSZ1lrQXp0RzdzTVpJclEwRWg3elplR3B0eEstN2ZwRzJiMjFkcFFYVnFpdmtfQS1XMXJXT1BPamdrM1hGUE8wZ0RGNkw1Q2FhX0FTWTQzcGl0TXZ1Z0RMdEJ0SDFqRjI1SHA2MVhPR2pmMDJDTDZXRWF0Q0F4MzFHbUVaQUdrVmdJN3JWOVRyR3RFYTVGMmVfVk5YV0lMMlVVNXFjX0UxOTRnYXdiVDV3azkzTGdUM2FFdzZWODk0d1BPTTBmeEhlbHV5TWhvWFMtbjJ5aUx1ckJkbno1eFJNOWR3aFVfc2xRQWltbXIzOFJCODRIQnVmRVR2aWFacU56bFhBdC0xUXd5MWtROTlPeFk2enFhbW1zVnFRUHVRekNXd2JyeHZpNFViRHRaY2JURkVGdDZZVTF1aERzTHJnR2h5ZHdydTJoOFVVQlEtX1A0T0xJZTlrdkRWUm1uUGJvSEhnSk9HNnFDNVRfUkNyQTRJM0ZXRHBwSjItLTF2UWJjZHlBUVJjUXI0d3J4MTZpSmlGdnkxa09jb1JWaWRaQ2Fpdmx0d3d1TXV1Rlp6TUpjSElzLUd4YUpDbVNkd3NvMDh0VE9CdWRNbXdod2tlTVZWT1laTl91d3lyaHRHTFpzMVpMWjJjUDFXTVBRZ3dZMFpodGlBRHR6TkV0cllsNFAtbjZicE5DOE5VNWR1Q01VeVZPX2ZkS3VOYUhZWWpMSXhSMndLM0UyaHd3amtHSDVTQUJyZEVxQ1FyS1NOYWYtWTZDYVBQOEdybk9UdUt2OHJ6Q3ZPZVNWemotbWN5R1Q0Q01JT012OVpHUXh3dWZ0a05kOXdJenpVaUE4c19SZHNyLWNvdW1TbzUwc19xYU1QUWlOLWF5WHBDNHNLYi1qMnJudHFaZEhtSU1KT1V0bkRNN1pSQmxCdE9qY1J6TnMyM0ROQUlhU2RUdkk0OElKdnZZNDJJZmxCTVRNWG9vSU9BX1pIcnk5NTFTYmVBalFfcW1wVE1EVFFDYU9yTWtzdG5OSmg5REZuNHk2NWJMSzlSUlhoeE9wdG1wdEtGQjVFYTE1RzY4U0xaVlRRVmlOR1B3R0NrOUlzdVZjNlFFMUE0Y1lrMzh1TmxLY052OHVoUHZGUHhpV3QyeXJfTGNnTmpmdzlia3dia05RdkI1c0ZOTGF1c2swX1FaZGdzd1BLNDFDLXFRZl9kM3dESVFvT1UwZzlGa2NOWGNOdUxTeTJsS1k3blVtaHZkRjdHVlRiZHFSdktHT05wdVZiQ012NlV5Wm1FU2E5dHNOdFpUYzNhTnR2TDNOOUZybDA3NERRMUJtUjYzaTV4bUdJZ1ZKY0c3cXJrRGFOVkt4eEFQNmFNZ0NSa01VNmctblg2NWU1X0RkSW52YlNaNGlsc1pQYUw5QUtiUXc2N0tuamU3N3NjZ3NBRjBHQlJxckxEXzNjT3plQ3d0Z2RhTEw3UXNHYWFISGoyWndfNjlmSmlCdEVWZDRyMm5jczZkQkFHRlltRkE3R2trTWluRnJTc3ZyVi0tSEEycmZYeGpTNjBCLXZEUWIwNVA1UW5PQWpqaU9LbloxQzlyTUYySnFCUzNQWkd0d3dnRHpfWUlNU2tuRFpLT3FuQWZHQkNJOGs5SmlCdjZTbkxzTEZBbmpMR3dmOURkZVp3NHN6ZHJ4dnNpY011T3IzUHB0bjBzRW04UDBEWHBHQkl1UGxvSlI0cnl6S0M0azZ4SW04dnVBY0ZTNXZhdjhXSDI0dXV1WW43RDhTUTNkQUFmZjhIR1p1QlA1WjUtenVuT0s1eDdzcU9oc3JicWNOOXdueTItandYdWtVUndITjdfVTZ3N1VUcGtESk9sV3FPNktPZXZEZGp4c3dmSVFnNU12OVUzZ2RpbXRKN1ZDbjdWSDQwYVRLNFUzanJ6RDVGWFZKcGJfTk5VeVdCeGJ4cGlzUUN2cURQSnh2ZWJzT0Fic054WUExbjJpaG9jWHVUVjVZQ3pocjRNZjNSTC0xWXl3clhCOHRReC1iQVNUZGxKeS1sMFRTRXlHSWNfYVR2Ql9xMWg5S3dKUmhhSTU1NzlNc2l5cmF4UmZxUkhMOVZzVEdaX1U1RDYzV1d0YkhfOUF6ZjhISmktOTNldE9zeVpnT0ZmUGpiTmVuaWRHMlhYWTQxLVR3QXpsZHpWSmJ2Z0lDb1gzcGl4VE1nS1ljb2Z5VjJ5cEZrYXh3a0lNVl9xdW5MemVIMzYzSlJBMGhyRXk2QllsWnpxVUF2cklEaUxRS2xvRmdocFB0OF9oVkY2YjMtei12Sm50RTMwYVQxaHZXOVVPRGJSbVBBeDczdnhjcEMtT1o0cXV2YWUtOHpVYWdNUThzd2Q3OGF4NE05bmJ3UXFERlI5a1U5Yko2bzlncGxpX2d4M2U0TTdOS2ZDdlJtd1NWLXh2TTFvT2laZ3U0Q1pUaFdqUXRUU0dDRTRjbEl2bXFBZTVmWkVVVUZtZXJNZnc2RHZzNXlrMGt4TnpNeDNHdlpDbWxNbVk0blg4b05hYWxUUXZDdlEyRnAycm5SbjFXREFYbDhJNGUxdEQ3RnU0aUxWZW53NURZcGZGb0dxRXVRQURFV3JwZ09rRldBVzRTTFJ2WWFsMUhRU2x1UkJEY3ZvZXB1YmpicWJmdG5xdW83RlJlNFFmejFnUnhSanJZTFZtVUJ3clA5LXoyNTBPZnhYQk1rWkJqcTFoVEhyRkdrT2hEZm1GVnJWd3diYWJhU2p4blZOSWdWNlNNaVhUQ0FnRXNHakI3cGNYYnNEWTlRMEtSeEN1U0I0UWJLQmJZaktsS0FrbV9LRTJhOGZ1clUzamY1Y1RuRUhlbFJsc0psQ05iY0tOMnZiaWhFVkFRUnJBQWtvSmxJVUFITzYwWl9FYmRQUTFGbkxFTlFjUVZCNnVWdDBJNGI4RDlwQjlNWC1Xb1FJUDFCWmlPcDJIZmNKNlVpVlpKOXJnRVhsbHM5X1daRzl1djlwSXJqRGlNU0dVcGJGM0YzWFE0aW1fYjAtUjBRVlR3WFRtVVpmdWtuTDl5RFRqaFlWZUtGN3h0NGxyVTEyT3dnYjZwZGNYZ1ctRkVVZHZLZ1lYNjJHTmZpNV9wSVZzRnY4UkhsNHBWV0RidXNWU2hwZFNidXlzMklVajA4NEZqWFVSdmJCTEREaTYwNGRuNUx0ZXBNSVIyNlZfRHNkX1I0MklNd0pOeVluQm5CcUpRWWFNVTl0QXdnSDk1X2tXQnJjbGdYRDlPcGRCNUx6RV90Q0JzQ3JyUnhGeEd2TUxpN3JBb3hfZXpvWmhfcFZlb2hjU1N0Q0R5ZUVTVGsyVDFKUHJtVGMzX3NlNTNybHB2RXVhTExMRFFvUzYtREtzNVpyM2ZiYkhKWjdGdGRZOUtpSmRyRGpEcVF0cy0zOG0xUHVvRWlyT2FnMG84dC1XWnFsZUhEM2xrSDE5dDA1Y19FcC1NZDhIU3VoVnZWdllJSUhmNW9lTVVFaGU2Y3dLOGlnSlhVbGttV2ZJajJlbEdSTERsMFFCaHJxNUE1MEJBTTl5WUszbkowM0xyV1pFbzM1T2l5WW9QM0tGNmlZM0NXOXhRbUJTNVAxbTkzVUZoaWZYMmtaTWJDbDIxR3M2ZlE1V1VvejY2SWU1NW1oM2Jxdmo2WHlDYzFybDMzQlozNlJKdkZTc2dEVkdNQ2xTUlNWTkV5dHMtSFpGTjdsbGM1MHZ1dF9aSDdFeGtKRERLTDc1ZVo5NXgwakR5YnRSa2djaFBWU3dJS2Y0cHFvWWtwUmhOTUdNUldteFlrcE1WZXBBNmlnNU5laU9OdVBXMVM4Nl9ZSDA5ZEQ5MG4tbTNQb202eFRtRGVfM1dJZFhvX1g1SnlQUjFSVFBXUEVoSXp4SWIySVFCRERGV2dBNXBYSVY1T1VpQnAzUlFUejlpY0tIcEkyMDdUODJ6RTUxOHdmVVJJLW0xUHBSeUI0c1BiVzNXXzJ4d1N4NFJvOC1PRldMUkdFd0dyeV9UZ2JETlpzRGU0UEpTVldIYjNGM0VnbUV3ZnBwZjFpeE1uMEptTDF5bjJsZkgwRktXLTlSYWFuRmttVXRnLTBQRmVMeFlXX3hMcm5xUXZVcWZtWUoydDk4WmVNRnRIeVhLakRkOWdZMjRqMUI2Z3RvWTBkREFUNFduNWJtaGhoby11TzVmRGpET2VMVWpvT2JGNnhSQS13WjJnaFluZmNVQ18tZ0lFcGN2SVRvSnQxYVRrNlJEOERCNTcyek8wU3RUdHdfeEZhYWpVLUxMUmszdEgwbm9JdnRJY1hBWUpfUVkzb09lOU5tYVBpaXlPWnc5aWhXYkd0NmNjZmpyZU1Qc0JxTU9qMFRNbTgzdVVHdWF1emVQZGpnX0QzLS1ISHI0X3QwaEktclFJOGxHZjlUaEZPR1FNVERuVWtkMVZQRlpFR1Y5Wl94dFQ1eGZzd0VGVEswVUVhYlotMUZhLU9SR3U4TUNFbllLQjdGMG5weUdrb1BfUGRwYVZIUUgyZzA4ZGZuaWdjX3dBSU5RalFZVTY4dWJGdDJkeng4NEFaZjR6c3pvUlkyRmNNVjNnWDBOem1UY1ROYzVpbmZFZ0ZHMVd5bWIzbzVvblJFWmlfNkI0WDNjVUpUdDF0YnhMY2ZtSm5wVkZxcjA2UVpSTTRyQ0ljMmlvOVlFbTVoc0FXemFiSUZpQWQ3TkllSzJSYmlIRWdPU3BhQUtRRDV0eWdwbDQ3RFJjRnY2OE9ib2stN3F0ajFJYWNQbm56UzVGVnJqZGQ4R1AyLU5nSENWRF8tbl9IVllJUkFHSHBxLWozaEViWThqcXhlUGE1RUFKaFg3NnVGWENBLVRPRlNfRXluSEt3bnR1THNJWEZMR1FpNUhiQlpMMnh2WkZqbVFQR0o2dGhMMHE5OEgtaklYUnJNRWpudkpxVkZJTWJCTUs0dUZFS0pKOXJ5b092aWo5U2MtYlVPaWhWREJyS255R243bzNmWHdBcE9zaXU4dlJET0FuTTIwUmxtLTJhUEFVVkRKU25VajhPV3VndTNqTnhETjNqYUppaUZIUkRBUUJaY0xZRjhnOWF1aTR3NnlSSnJvX0tVeGdIM2VFZl9vUmhjTXpMYTl3TzQ4aHlmSGxzVU9aaC1XMmJVQ0gyZ2xkaUUzTm10QkRFXzVPZGJPOE9VaXhhQkVwckt0YWhxVEtwRW45NVpHWGlnaF9IS2M5T1VtVS1wRW0tMUtTT3VjUzZCOFo3WFVHNU50NjcyUklRdWgyVHNkMWdxN3I1V3BYbDVWREpFNTg5OTh4Z2syVElDMk9xX2ZXTUd2XzNTWEdlYkQzdU1VRWVlYVlwdnBqQl9WQnQxd2syWFFIQzBZNi1PdU1sZXVuQkVMRFB5cEZpNGZaZXIzVi1DRnh1b2s2N1VRQ0JrYlZzSGxTZndWUTduSTRJcVF6NGxQbGdiTldROHRIZVBsenRKSFg1NER3amdZU0dzUTVuaDR2ZzBoQjdPRGVzOE16MDhrdmhjTGl0SFZUT0tPN00tZkFpbENNUnZPUkdYUTB2VVAwU1F6V3lWdndIbFpCX3Uxbk00Z2N3dFh3V0lzNG1zalRxdmNXaDYzZndEYjZ6dVdIOWVncHBOUUtldFJ2Zjg5Yl95T2tUU2RoSXp4QXVuQ2JSRzdEVDNfU0hQc1ZrYUJ5Sk95REVMTE9tcmxRdEcyV1pPM2VoUEczVjdWR0VfX0Z4V0szaEFHdnJDWGVybGY5RXhDN0xGNnExNWxaaVR4MlNITkdVZGloY2hzbDgxY3dsWkVTTV96ZTQxdjh4MjdJTWFReGdrRVZxaHFSNThIeHpxY0t5ajl0NXdPU3JUTXo2VU92UUZUQi1PSHd6WV9icElST3F2V1VSVVhiRUJmckxpLU9pczVscTdqc2pjdG90dmpiTEczZFhyNkczbXlLanFWVG5tZ1NTNTFiWGlDenpHRld5cWFTamZ3WFFNZzMzRF9kLTJRMHN1Zlc5RkhuUDluUE54Slo5LXk2QlFOZXM5STU0Wm92YWRTenJyaElMTDNoSk5KeHNiNzQ2ZjAtV2dod0pid2RHVVcyZ3I3dzdJdDB4cGY1eFQ3YWRmY25QY2cwOFBjNjdjQy1rX1l4Z1kzN1luX3U2ZkIxX2xJYmxvQjlQai04YkRkWFdXTnVGLXRXS0FpTDhLTXc2MEhoNkgyVjlIYzJxeDUxV2pPUENrVGt6LWJBNTJ6RUk5TVlXaG85eXBOTnh0TzUwa2RIZHF6WU05N2lkRV9lQXhLbHNVUEZ3VnE0R0pvMTNISk9ELS16YmFkT05oU0VzRDNsRVlKY0RGM251UW1EMjlMTmduYzhYcFdFRWpnTGRXeXg2NFdrazFGc05jeDBmcVpDUy04YzNiUngxN1RMaldtb2hLRzNOUEEzYThlWXhqWjBheWJoYnF0cE9acld0OXJBY2hmbUxYa25VSV9vQjNJZ2piT3pTVXpCWkVmekExTlVjYjFLSDVINkhINzYtRi1MOTEyRl9jLXNTTW9qTU9Ca28xYlJ4bER2eFNQbjZ0dXY3TFNxUVRVWGxNZUtRUGZCNElQdHJ1UWtMVXpBTTFjNTlLRG5vZzRETy03NS1wcndHV1NHbE1mQlVnRE5qVU5yNkpzZlFNSzFSbWNrYWxwM21nWnlSUGxhUWwwYVVwUjVxbDF5ZV96c2dLYTJPdzZ6TDZXamx0a3lYZHM0NDBSWU5tQ2Vvc3R0VjZ5SGQ1Nk1aWE02VFcyd3dwTkR3TVdUWGRCcC1Vc3RKOGUyc05RTnBfR21TNFkxS2NtSnluMlBxRHlwUXczek9oRW42T3k4a2lZd2pFajhCdHhzMk1CQ0lBQWRmTGpfUDhVYUhqN1VQYzJWRlZ1blBwY01GVGhxVVo5Rm1NYzF0dzNZYXloMnlrUTd5aXdCUzBTSFFGUFpTYl9aZmUtTDhiakNzV3o5X1FlZV90RHZmUVI3bGNVaU01Z2h0a0lNTFJFeDltanVVTGdadjJjSGY5Y2tGclJJOHZfcVZtTXBCNGlhSlQ1R1J2YnZmdjdMeGkwOEFiQW9IOU1UMGRyVXlqNHBxRUJ0TU9qbkxrMXZCV1dfZEFibkVMT0VkOTdqNzdabWFQb21yZ3lOUGszdzV6LVZvbHJzWHU4TW5jZFNOQmVEVTl3clUyV3VscmtPeGt4S2I3WTZwMk5KT01YT2lDQ2hmTWNTeHZsZFpHbEFIZXRmWElLUUh0TzJEbWJFYWQwVHpCZG1OVjc2Unp4eHZjNDk3VGhZeTJraGZyM05WZzFnV2RmVjNROFZ3M2VPMkRRMm9SbkYyYXI4Q2dWb3VEZTh3b1F5amJ6MllTVTRFNnl1VF9zM3RSRHRNQjNzYm1xVEptUVdvczFUYXpBMXNtLVpqZmpObGNhdFc3QURESGhtLUllN2h6TkI2V18wTzVURUlFNGFSYW5OVlFTal9GNW41UE5idEJUOHJjck4tTFFPWkZFS0dIQjhFNkxsVG9RRkZqOVN0bWp2ZkZ1eUxJejJqMGFNNTdnSHh3SHVwSVlmM3RUSVdZNW1yRXJ0VmRNS1g3aExIb3JCcWotZ1BOQXluZHlFVlJYcXRIZERVdlRObVNaU1BrMElRNUxFMENwYVlmSnpVWWo0VUkzcWJDY3lIajFqVUR2bXdUUG5CVS1YVXF2WEtmRW1lVnY0UFlIWEhCZHNWY3p6OGZKekYzd0Nhc0VmVTEwdDhlRFhleXd0dXFwUG9QeDlaMXlkTkRjV2dFREZ6WGdocmFNTWMwMUlwYkQxaVZBUlVuQThPeTA1ejBXWXVGalRmbUxjbVppNGk4Z1JxU29lbFhsZEZKeHQ2SzJWX1c4a3p0NlpZSUpPWW9sU1ZuM0FfUWZmbHlPODF0OTQwN2ZmSGJxczY4aXFDd0dBb0lfZ0hrbGRtcUtYNkVWWEZKZ1FmU3FuWU9FZlNLRXh1dFR4N2luc1dIUHlBNGE2LU9aSTlqZEhTT2NMNDlILXhHRFlLUUFXVFk0OXQxYVQwY3dVSkNvc3hnYUloc0F1NGZ5LVlnYXJVUTkzUV9EMmhQb1Q5UU83aExPSUNaSmxkVjJnVlBDUDZyaDBWYUhDSkdzU1RSeTQ3NnhRbFp6ckxGSXlQUlVXY1hhRTNnTjVTWHMxLTY0VFB0OGlWQWlObGliVHJrd3lCS0xNMXlDWVl0bVgtb3BHWExMVllnb01tMnJBczZmUzU4SUgta2RlbTNLdUR3eW4wS0JuRHFTX1ZRWFpFUUJ3STVMM0NGc3pFTWRaS09SOUdrTU9ySnpnaWRUdWdXR0wwZkVmWGliLWNqRnlwOElzeW5pWjVvbTUyNm96aEx6NG1pRHExMU5uMzBSeHNMSzQ5NjMyX2VlVXl6anM3MzJPam9ZcVdqTDY5R1dhXzJZLU9FeUVuNGxFTE5mQ0Rnbzdwa2t3R0VhZ3JoRlhOeVRJLWpGWm9KZUlaSmZuMm9nLW9uS2NtTnpDYWZoRlprbVdQa0xLV184MWVhSUN4a3VyUWZoOFFrejUzTHRjaUdCcjE0LURHWXNoN1ZqTktvb2RXQXZ3ZmFRWUFfU1ZoTDA5N3FLd1QyM0FWQmpsMzUzZXczVUZPUUQyR19UUjNaS1VhTlpHSVJoYWg4YW1YQ3RfMTUxd0NoR2M2aENzYnduSi1iZmprc1QteHBHdG8zbHhtUmV2Q0dXUW56c3VpX0xiZW85cEp2cUxnUjFFNEUxcmpXUllUSDQ0cEZnUXVOVjZCdklYMHRleHFQakxMRnM4akFJeVFWUkV2WEZaZjdlYVU0a3JmZGtYNXMwZm1Bd3BSSFhROElXeU5UNE5yanpwVlNnclRkVFlfOFAteHZDYTU5WXRrSzg0N0ctTkdiOFhaS2FMWGxTT3ZuTUZMbGtIXzRfWkF0aTR1X0hHV0I3ZVdFTFJRWXNKNGNZTXRtbnkwY0o2MjFGdGtZQXROQlVmUWRkMTBDdmQ4eF80X0ZETm1pTkUtQUJBYUZqSW1oWWJSbl9NTDkxa0RfNmxWdjQwcmNPZEdubTFUT2hWRmZIYjdDQjJRYlBnNHhqS2s0Qk9LRF9tQmtBcnh3NFJpUm5rN0s2QW9aaGRGZHlYMFZza3pfT29uenRETmlYX2o1eFhKWE9qNUdzbHppb0l6UGI4SnZRMkQ1cmtUQldtQ0JfUTU4NlR4eDZIUlNNXzhRX05ldHNqM29rSDN2dkMyODdlQzE4YlpsRlpJcVc2ZnFrSzNUZjk4bXl5VFhqWFhLMFFBdDc3OVdXb2NMTjl5bU9hbEp5MG90bnRRNG92YkVHRC1MS1Y2N2lyQWpqOUxDS1pqRWlpd0xiMC0yeGV0U2gyRkFpcnhtUnByRFc4SGZRZXlJTzM1TmdTLUFkcFQ5QWp5OG5Wb3hrWHByMXBhMGs1QkhsUVk0TmdMZHVxTXdHZzhvNVpGRkx3dmx4Y0xKWFUwQWVMV05TM2gydlRhUnlxMnQ5NVVOQktTTFZ6NUx0VVd0eHRjZlRxNDV2RnJOVk5zU1FIeURHVkxVYVE4aVo5ZlJqN1V6WE1oWGU5VVMyb1lJVDBqSjJVdU5VcVplV0FPRG5OcDd5eVJsenlzb0RycHFuVnhoc3prZGFVOFI5WFRweWN1azlrenpZa0VsaEsxVnBZdE9QZmItcXRxUjJYOWVEQXRuYW9ISm5WNExQSXRXQmVKLXAzbXpHZTR1Z194bXgxckJiQ2tza05qTndOR2tGYzVDWXBPcW5ubW1XelREdk9tYloxa01RZEhwZWJfR0sydGRrZXhEVzMwLWNYMDloZExwMlN1MXRLZEZ0NjJmY3pKdVZSLTdTa0Zzd3dlVFBNU0VKaFpFeFBYRzZjdTRCZzQ4UkxhdGg2UW41X0l0NXlVMVU0SGs5TnFkai1ncG1vM0tQMjNfYmxJc3BYUERaS29BRV84WG1MazA1SExyV1FXNkU4bXlBRDRJdExNS2xXTVJHVTdadUVkSEtXZnNsdlhaQlNBdmw3R25SLW1DWVN6UWl2NGdsZmNGTTZ3c2RlTnhjcGF2V3oxbWlXOF8zbVprS2hjUV9iV25URG5MdWNIZ3FaTEE5akRxR0NyanJwRU9BV3d1LWs5aVNoRDJTNzJpLURwdHotcm1tWWxwaEIyTkozcFVJVFRaQkRfNkdwcXo0eUhkTnRJVDdRYm5xTVJsaWVXTC0td3BURmpRMThUUVNoN19SdDdPUjhSWlFLM3dIbFYybG85OW1BMmhUY0FxXy1WVmxpa2pUS2NlbEFnRm9oME1fOFJqbXRqbjU0aGRWQXpRcDZOZ19qV01RTS1YV0lqeVBTWjVqY0RaQm5rNzNtbzdkaFlwOGxDSE1peUEzQnZNSkU2WFZ2VU1INDNfMm5IblpXbFZibm5WMTdMYnQtNEhvVUNNcl8yTFJRV0IxQldjWFg1V1FBdUJLR1dsR0FrT0pKMTlEMENnbjRieG5pV1lDM1E0YlhfSjVvekt1NVF1VFZucklMN0c5aEdXS1NvZ0FJeGF6RDRITnU2X3NMV2ZOZElpRy1KWWwzQTM0anZhY1dxSDAtUzRtVjhXTmRtZXprd1FoSnEwWnFuR1FYWFJ0RXB1b2FiOWRqbldzREY5VnpDSDd0emdrcFVmOUw2NFl2TS1kRzdyVHdlazk3Z1AxTS0wcVJyWUU4cVRjcVRIaURCTFBZR0dMWWVjdmhIck1QUjlmeW5BeWZWOXVpTWJLc1ltcmZGWTFCeHh4T29DazlsY2pRR2xLSTcyM1J1WUZHVk04R0F5ZFpMbXlaam1IZXBsdnhGaXZqZFp5cTVPcHlOYTU0b010bXc2SnN5dGUxU3pRWHR4eGZjT1ZDUlJXQ1NpVUt0Y2V6TkdpMVZGeTVzQ0RHd01ZWGtRY1d3UTlEUnBYWU5VNW5TdDVBaHZxdVZrSjRxSVl3WS01WG43QUpsMXlsbDZYaU5xbEhjdnA1LWFlZkFvU3d5TXpZN0YtOFU5NGlxdTNETXVqUXVYRmRieHFLQnM2dm9zVFBWalVQMmw2TG5PdnI0WU15dUVCY0lkeUNyRXlmeWtDanhoZlBjYUJoV1puXzlVbFk1OGk4UEgzVFVsUEQzUm9xZ2wzUENyQVlVSUJLcXo1RHZFaVdRTHFhU0s3VjhEWDgzdDg3M2ZHaE1fc0pwZi16S1YtV282MVo3Ry1vMEZsUzF0TnFiNWFoMWhJbDRHbjRTQnE4QlVkNjF0VzlkVHpUNXR5N20wNENXWTVYNVZLeVZsak1OY2ZkY2NRZm1VZjNjRm9PUjl2ckl3a1pyUVViOEpMTUw1ZHdwMEw4UFJMZ29tb0tPc21Jb2VhTklzNEU4UEVnMVRQRlloQk1mOFkxWnlTZXRjcUxneGV2cFpseUpaQ0EzWWRSaGw2enBST1d4NVRfSDlDeXVVQmFkeUF1bEswNW42Nk1ILUdMYjZ5Y25VdFhXZDZpbGliYVVFUzRkd3UtTW9FekZNc2ZhaHBnWUhlRDNjSlJ1TXB4bjRsRi00YmpSWWFyR1lHQ1lpV0VMVTBMZnkwUGNOdHcyYWtmY083WXdCS00ya19CMmhNSldSWlNwZ1BWRkNxbmp0SWJKaDJWUU0ySmMyUU41RVI0UDgwVkliWUpyNHNvSEdVNWUzNVRYdGVJNGJ2RTFXcHJKanppVGNMb2dQQVBFTm5KalF2eDh3dExFdFlXSUJhcXl6akZVOTY2MGNyMUhmVm5oNk8tQ3lGenF4eXVJaVBKWVllalZwTjk5bHJLaVpaNnotWG0wZTlGWjJoczBrUWlIREVXc1hhbGtKRUlCVkM5SG1YQnoxd0JxRlp3NnYtWHBneXlZT0RvRTZLd0FCWXlwc1hKLTZlNWQzV28zMDZndFJXUm1udFpCa1pPMDhqQ3Fabnh1ZExmUEVPVHkwZHpxRTVYZDJqX08yaXQ1Y3pNTWdUT1ZIVjJPakhFWWg5bEwycDdOQzcwYjBneWl0czJjQms3ZGRKdGZUM2tiLWxvQmo5akQ5VkJPNlZ5OFU0dmdXLWRndTFUdS1TbWxJcFgwOVEzenczYS0xVXNkQmI3TE8zcGw5U1ptUnRabWFuNGxPTGo3Sm9IX190R1FuTjRlUjBPRWtjc2FmTHlPRXBPZDFZbWFObTVFVzFuQm9VeW95X0UyMG9FbXNmT3hPdTVfMzJFTmlfV2pTdkRlWHhaNXptSW9hYlNNcDZEUGJVY1lILWswZy1sbGN1T293OVhSRFhWTmpYRUI0R0JPT1BfYjB5QTM2ZDdHdkdPZWlfQkp4ZGU1d1dCRzZfZGJFYXY2RGVPWlk0eUtLaFBYN1k5Y2xBbk90clVNYW81TlN4aUdRRjlQbFY1NEJLbUNoMUhOVWFpd2M0b1F5MkR5TjdFVlB4enU1VFJEdFF3aC1oSW9pSHBnX3EyU25IQWZkWFY5QmhEZDQwTkJYbzN0Sjc2VzI1cFFzODBqaDFzQzZrd2pObHJtdmh2MEZnMm0xVXVQV2kwY1lNc1JlU2Fnc1l6Zl96WFNVb09odVR4SUFIWFREZG5vOF8xUnVEYUNGRVFZVkl3QmlFY2VYNkhBbGRTQWRQb25BWk51YXpUczZjQnZkdUFmNjJiVC01SE52QkZ5YVpLelVCZjJodVhPTjMyal80ZTRlTHVIcW5ZTkFKc2hmT0NNakVwN2JkVlNyOW1HTVJTTEU1cDBGbE55N2UtTTl1aHFYdTdPSThtTXN2MVA5ZEVBZkpYcnY5bnJFUHdqN2F1aGhUeFlCRWJ1UEZTUlhLWTlaS183TWhrY0R6VHBzVnNVblBCZENDWkhSYTd3a2swMHY2V3JjOG52WUlqWXExN1A1ZXhHT0VZZjFqU1poOGdYbXZzUGg0eUhtNmRYZDgyUjNSenpTZWJ1aEJhMXJ6eHgzLWVXRkhzQkowUTdOa3lPZjBjUHBMSkxLb2luWFRGWmxwOU1SODRIREt0OV8tRjhFVU43b1JVUmhISEpnSHd1ZjdQZUFSSVFuMlVtbzgxZW1pRFdFOFU2MV9WbjdpbWJZdkFjYVUxYXRBX1ZWZnVyZGx4U1R0N0tnZmczV3RySTMtVVEwYWtsMkpJaXFoZjZSV3VqQjRDSmJSZ2VMcElnbXlZSlRRY3A4ZjMyM290TVJEcGxwU0Q0eVVlajB3WG9OY3QzTlFVQVhlRFVFdjIyQ2dyUUdwNVQzbW9Kd05XWVJMSmVBYld6LTJNUzZya2dXTUo4VkZyZW0yYjRLaW9iTzE3bGF3a1Jia3RMRGszdjZpTEhNS0JaQ1ViSnQ0czJsYUhjX0UyUW9QVmtmMlczM3pPLTBJRHZJVHhSbFRIZ2ptSXJ1Vjc1QW5venE1aTZpemRxV2tLQWx6VE82Z1VIa3VSZ0Nvckx5N3BEdVdRLUREblhDUUVIaFVBUzVSdUlERmloaUVUU05oWmE1VzBXR2xJUFJteG1UV0d2Ny1ZU0dDakJ3NlcyQkE0d2wtX2JDWi1zSmJMX3ZZa2FwdDh5WGdsZzNsNjY5ZWtvWTJVbzY1ZG5Ib3AzYk9QcWZtRWpoN043QUtKUGFBcFg1SjhqaXdRMTc5TS05YlM4RGtPQ19GdVNtZ2UzZXJxc2VtSUpEN3RuZjd4aTlqN2tPR0NaTWNDY0xxOG5YTTdCVUladzhUcWN5TjVoam15UUdhc24taU11dFFoeGFRcmUyVzVtb1pWMzZtS181dWxGUXVMcDBUbFdtY1hqQ2dic1BmMFhvdklOTURET2VUOUc5Y01DWV9tdF9zazhsdm9hUlRHMDhnMGhSQkhyNC1ZVXRrU3JXamFORGNuM0taUERoUHRUNmk4bmNaN3dKbmdDWUU1M0lrMlJuQmEybDdvb1A5RVhBU0FHSnNPNndEWXBaRzFRZXdkS3F0VHhpcmZxU1VPYWRUd2pRY2pNa0VwRnFza2ZsREtEbFA5SFFxdGJ5a1pfMFU3eDJRVE5ESDFORzlkQmk0UzNDMGVRYVdXODEzRDhYMHppWHBMZHpxZldJUFlQWUlXRGdPelczYXp3MjVNLXUwa05RTnFSV1I4REN1RjVhQjcySkwwSEdUektwMmsxRFZvdzY5R2pJZFJWWjZkc2JTZ3ZiWC11S1RTQkhORTN0WUNxNzB0NXNUb2dYOXBmSGNlN3hBNWI3aHZFNjM5UjUwV0FySGdjTjREUzRhdWE3UVdwS0xpZHpQYTVDcU1pMjNyUnpMVGRwei1rNU9yUVBzUGtxd2V2OXFWblZVMVB6Z1NnS1V2NlE5ZlJFbFRLSGdtYUlwOFlQenFpWWNWX25FQjFEaGVHTEZ6Zk5abkZjNEh2WVZ2T2dYVWRSUVp2WDRSbG5IbWtfVzFfS2lWaGl6b0RTbERYUzE1Q1VuUjdteGZqV0JOWThDV2s5UWk2TW1LaUdLQk9EdE9MczV4alkzNGJvUC1Ca0stbVhxaVh5RGpCcjVwUGNJYnd4T0JoTHg3OXcweEVzaVpiRjl6RnJHbFR1R0ZSRkNWdkJEQW1nSkRya1RJLVpnRWl5Y1ByeDEzaVNESVd0WHJnYW1mbzlRelFreURzc0RqdW1TWl9BN3NVaURTY3RZdTRaLVVaMWZacDNkTUhUZUs2WGxQRkxIVnY1WXhscEdwZDFEUTV5azdOYXM3WEV0UVhXT2Z3NmhHSzJqa2pKN0ZGQjhTX2Jfakg0S01QNW5LU0pqQU1OXzZVVVFxbWJ3QnFDUUNrQlBfOU54cDhEV0RhYlExdXB0WEhjaVJ4TDJLU0VXT01pUkxWQi1MVEhoR0JPWmlOVjBQaFBEV2ZMMkFia2xnLUNaeXZtR1dqb1dQdHlmRHFOYlg5RTliUXk0MWV0YXJaLW44X3dDeUpiNzRmcDRkcHlfX3FQUzNRbm9oeHBPZ3JpUFhaS1NQOFUtRzhka2U1Vk05OGVQNWIxY19waTZWSG4yYjNZYUY3eS1PR0pRTGd2c1JLLVZ1cFFyQkwyTTVrdWw5bVdYaFdJU2NiYTcxU1VhUzk4aEVHcUJpWlZUaGwzeUlYRXhxUHBRWUZNcGl0ZFdSWGd4TUdQRXM4WTU5M0NEZXN4R0dVTmxqTjQ5Q0J2QWRQMHp3ZXF2czdlOGlyRnpneVZMWDVEUEp2NWljY1dLUjVzSXQ3QkV6M2loZGNQSnFxQTNuN3ZRZE01TTIyMVZfSFFlNG9fU2N1SGIzTUpUcHdBd1lzVjR1MjVrX0FKYW1LaVgyYVhPNldjN1lOV2VILVdPNHJtdmxENmsyQVJjVEwxZk9FX0ZSa0FWX09iWk0xR19yZ1ZHVl9xOGJZSG9iNEduOVBGWm54TjJMVjR5bWtWZzZodWFJNVRxVVZfVGdZa21kRnViVmZtUTFCSjJEZ3h6dFRUMldSZWl0X1N6cGdMX0pCcDNhQTB6djRBUEg1Rk5FUWxnSmo4T2RkRTV5eXZxUlZacEZmWUpaTk5GZXhodlMzOXpnM25FS2Y4MFhyRmJTdjFoNGJSZF9yazU4V0JvZ3poaTdKM1BYQi1waHZZekRRemZnNU9BdmVmS1hiT2RDZUQ3aTNJMmYybnl0TmlPZnA1eTlPR3dHTXZnaDhLVmR0V3JERzg1N3Q3bXcwQzZidXhXcDhPN2hsQXRkYy1ZVURxTEQ3aURCTkgyQWxkVmU4SnotMzZKbm1KWm8xOVd2OHh5Q2kzdFdfVjYwNkFHdS0xSVZnam1sSU5XRmRxRjlpU1U5aEw5YzR3QU91VUlSSnJZOUNrVVdXQ2hZSUhwam1fX2hmY0FPS1FtV0tKU3gyRE14bFNwRXp5VWJnUWN3Yzd2b1JLWHJVNjlQZl9nT2k0ZVJjemFaZXNESHpGMDFwQjFaQzVCWlBJNVN4RkNDbVdtSElXd3dzNzBNS1VYT2FxYlg0b3RTSS12aktGOWw1N3huRUtGMFhhVFc4Wm9xRlNFN2ZteFB4OGFVcFVMX1VSQlhLUW1BdUZXTkVIZExabVFBQWZub3RFN2V5eTcxNVJ3UkZTWVhNV1ZDWUhPOHV2OUhORlJHNWd4MW5RMHFQaTBRNkNUVTI0N1hLcWV2MFRJZUJlNTZ3cXk0Y0VyOEkwRHNvcnpsTFBONHBiMFRaX2g3MW9ZenlvT05uaWlGVGZpQjc0NF9MWjJNVm02WFFVc2doRGIwT3RtZWJSVHlBQWoxWE9ueUZyX292cmtpaWc4VXdNVjVaWGplQWpoaG9KUHN4N0QzRmU0TG1SMEk2d0ZNMllNZGRPOU96MFRzekh3VWVTQUFucjNzU0pWdFpiR3c2NEZuUElsNVc0YUZhZzZmZ0V6SUhmUXRHMlg1TUR2ejlPejFibjZiSTQwUHJaS0FJSGxRY1p2Qk5HeVhjdFU1bUFBMFZxTzhxUHdvMkNvRi1wRjUxYnhRaFRHLW53Q2tqcjNkQXNGdkZ1RUtsS1R5b05FMW1GLUpBdnZza252UzRmMVZFYjJocl9mNGNUN3M3cVpyZDJWVTkyMUg1MkV5T2lSS1NrM2kwb2lzX3FqT0lSNUI3Y3RrZmxUVWhPbmROSi1jVkNHTVExYzdjcldmaHdBd25yeWpPVkZIS201NFdCbS1wRjZJU1VxTkpjVlFCREpnUnZsNHVjNEYyVFJpQURaUU1ZVVQxVW16WFh5U1hSZ2x0QUI0YU00QUFrUnBWTUVCbGRvTm1RWm11REgwSzJieWl3dDVscTNBMkZKR1J6enlyWmxLSTduUllZNTd1Y1U2Y2pOMkhaTjd5SDBIejZLanA3ZzY3Q1k2UnFmaDVEdXgwQTRNZVNidHJrdHg5QWZvc1dJTDZOV24yNlR4c2E1UVhSMFdsalRZbkluaGZpUDZjWDQ5bnBvTWc1aHcxRTkxRmdEcjZZNEJTbEdTMnA4amdUMmVLVl80SFVBdnFVNDhSRjEtdzNTNjdybzhPdXBNSnVjRFoycnZiVTB0SXl0TUNtWGtxN05jYWFSdXVsZ1p5YmZscGJUdGtjNFg4VG9PNW1KVGctRzZwWjgtcUZISkNmQnFadGdZQS0zeU9TNEtlSEgtREhiQkxiU25ybUJISkhDRHlNZEQxRUNNLU5kWURibDBZQWhHU2lPOUxCZjVmTDV3VzlsaVJhWmwtVXJVa093a2N3SmtBdWp4ZllGT2h6Qjl4dG1tZmljeXFuN1p0eFBkR08yWlhjeXhFR0w5WW50bEZpV2ZmdTFVcWRZU2taaUd1WUx4dlFQdFgzNklOS0pmeHBOeHJhRVFPalFyT1BLSVhjWjNUdTVfTkU0OEpDbGtJLUxySlRqWUdMUE1xOFRTSFcwNWZrb1I0Nnd2WWtQakJQVGZFRnBSVXdjcUlrdm1zZndhQl9KUTNCX3E1d2tkY1psYWt1SE9RTXptOWVKa3Q5akhFYW1LNTlFOUl4TGxpM3g2ellvR3d1cnJMR0R5WXRVLVlGeDB2ejJYX1JXV1h5U2JraVRnMDNZSHVWWnpyU2NCOVFiZUVSRUlyLUZqZHRMRzZUN254cDdOV3BwQ1NrSDBnUE9HRTNkbTJPazJyUVFaVmFqaFV2ZWo1Q2xlQnA3dkJ0Nkx0SUM5Z2o1WmowRmxNUDFRZ2VwcmktWkNqVzJJSVFJMzNNcE1vV1I5MFE5Z091TXN3ZlRpdUk5eDBVNktodXdxZTVpenlSSXhIMEpqNlJVTG52ajk3X3l6R2c1S0ljX0xiazBqV2huLUlTaXJUeC04QnhwVUZFNEZmUlNvaFlqazNUZzhpb0NyY0NJN04wSzRwd1IzNE8tTlN0UGNOSGc2dUs3QngzQ3RQNHdOZXE5aTlHNmxKQ0xvN045Q2pRWGFFSi1taFlzRzduZUlaMGxIX1Z4X2wtaUIyMmM2TWNQTW5jMVVFZGpJcDhYUnhHY0hEekRIWW5VTHhoZGYyRllWMWFtdmRRY093ZVJtVnZiMG1PbVJBenRDOTNhV3pYTVI5SUhmLWF6QXlLWE00YjNxZnZCTTB5eDhOaE0xc05ER2paZ3hxRlBDTTV0eS1zY1pxVm53OWtSZ1dZRUxhNUIwbzNVOXFFY1JGaXZqTWdwT3hORExVOVpZbVVkcWM1aGEyM3lHbkE0VGdiTXJGcHk0V0FwZEpWTk9wc2VtbE91ZC1RYVgyQUZuNGZJUEZHcDJTa3BCNTZqTmFkT1RCdS02dkNlNHdwQndDRk1RclA0a2M0VUtMUnNBdFNzOU1OTzdaOWlma1BwbFhKaFNIR2R0NmZPN3l6SmFsc2lPZl92TUppSFB1bXdwLW1fcnVURXlBcVhON2ZGdDJMcGNzbmxacmJzYlY5M1BWZUZwYXBOT21hbmNhbjBUY0RrWXlPYjRfM3A5SjhMamZYTlYzLWsyYURSdVNGU0hDQlVvOWZmaHNTdjY0VlpiWnJwZWZwa081R1dhRUNQV2JLbHJiWHlQYWNnMFVod3lTWmlBTEhZcDhWczdsUG9VUVVDTkRnOFpxb0FfTDVLRzNnZVFDOHg1LTRyZlgzTUVrYnEzMzZOeUVnNV9yOUdQakYtLWNiT210M0lNWW1oSjBUZUlZQXJYTU5jZ19OMFMyYllJN0pTaXhXWXlfMXRDdzYwblFQU0dpU1pVWll2dXJaZDBYZVF6ZFEteTJXQkJhVFpBbUY5bjl2V2t4RmlwLXJROGc1RDFpUUR2OGlkV2cyaU9EU1VZcXFZN1Z1YWNNeDg4MmZWT0dzNW9uZDBCQnJHdUZ6RmdJR09jUktLaGkwdEJkaFdwUHRhODBiYmYzekdtMXFUX2tSOHJ5MFlLalphR25aLVNiTVpVcVNWT0p3SFdTVmdlaGdBTXRRYzhLLUxHanFCdXBUbjVxdDZzRmVfQk9qbktOX3dEbFdrQ3N4aWx2Vk5VdEotOEZXMVA3cHYtZzB1OGx1Rk5kWlhqdXhJVVdHWDlQd2F3Zk52UU02blRUZ3MxXzQ2Ylcwb3h5RWFCUEtfeW1YSFFNNzJoSUxmM0x2QzN5WXhNSnVfYzF5cFM2T0xsZ0pua2o0YnpiYllQdmJ3UzV2YkRYRFZUZ3ZWS0ZvYWRRd211RXdtNl9ERHp1ZTZUd2tmRHFxVXR5Ny1BRXliRndCS24yaGxmMXp0LTY5d1Y3UGtCNEFIVjc2aU10T1c4ZUlmVzMyRF9jLUw4MDRXenRVYWZPNEd3Mk5CRVdIdnJmNHlHNkRDcFdvRTRqbHI4cDcyWFZRUHBaMEtKeHBLdG5UZHpZN1dtSzNrRUg1TjQ3U2NPSC1NYlBnZFN4bW45M1hfUjNTSG1ncnFpY2R2bTJwb0d3WmdXWjFhY0N2Z09iX1A0SlBLcTA1cm5temJJb0pjNUJxQ1luQUdqaU9oeEhHUk82bEoxVjJZQ2ZTSkhUTERVWjlmdmdtcUgxaXBxOWF3OVg0RXFSdDZheW8zX2ZiVGxRVUlDVDJkRGZUUzFPdWd3ejB5TV9JaDRnZk44MjFwa0xxTF9EaFdqejJIcktqUExVRlJjTjNoRXdOR1llMGtuTjZ0STVfVklzcFY4eFVDVjB0dFRwenBqVHFVckNfTm1KMlcydnBlNFdLUjZkZk5CdFlxQW5xUmRLcWFkdjhHMllfTlhTQ1RRa0ExRzN1UU9vUS14ZFd6eGs1T2RDZEQzSktxSGI2ell1VFNlSUN2NmQydzZFdno5R1NyNmN1bGZjMmczc2ZjRjZNOElrQWdXcnE1bWxhdHpxc2FROURXN3Izd3pualBoZXZnX3c3MTNtMGFUVkhLNHVwczlsa2N0N0RWVHZLbGF2SWJVTGRKU0FXRXlReFVJejJ2MHdocy1EMEFhVDAzZEdWcE9sWEhrVnZrZE5VS0dSaUZjTFJhZzVyY1ZWUEttRlZzUV9fYTdXZlpuWW0yR2lSZEtVZDRzZElqYjZieFVNUVpXT3BoV0tKQWZlNjlreldLOVNUMmQ4bzJ2R2hhWEJNOFhuOU1IcFIyVTQwdFlqUmNpcHp1NVhBcHg3d0FzMlNJVnpoUDNJR3E5UW5MQzRxZUpmd2J6Z25PQUFWOVVIM1RTWjF4ZUowMUZrT081S2FnVDlMXzZxd3ZxWHozV0N6RmM5NjhKWXFIWXVnU2ZqNEtUOUJtaks0RWRzMEtxNlFyU1ZjQnB6OVd6WEJYMC1aZTI1SXNPeTBqNFV3c0NENkNXaC1XWFNFMlE3UlBIdzBxaVBlcWEzTXY5Q04zNGN1akFOc1k1UGZDcW9FWU50Qmd0Mk1xdmdabWc5WC1ObE80Y1J5Qk1mNUJiWW1hbzh5MWdyTkl1R1d1MDlUbExBUTdnQmkwRUdyMU1xQUotLVEyMGlPWEhKWnJEOV84WFNqMkp4UnA4Y1h1MEpFdEotUU40c0o5NW8zQ2Z0c2tkdi1Ya1lTWWNqRnRzUDR2eGltUEIyYVhHSkk4NzhMUlZKX3BmaTVHYkkyZHFsMHV6b2VTODFNal9XYndzRHBuY0dIVVpBX3ZtRS1nWGVsZHEwby1HR210RDBpd21sYjdPczdZbEFpUUhfeXpuRk9xSlQ4VVRGV1lyR3otMDJrcUM3RElSRU1zd1k0OWFmY2pZNzlQWFJSSmcxNWl2NTZ1dmVEemVWLXp0cEcycUFlOGRDUE5wTEtxZjVSRVVPOFZSSE1GeExGbTBlbnpxZXJNc1d5NE5QdWFySGN1TXdLU3EzQWdrc1lINWkyWW4yaVI2Z3YtSXNxcGlkRmRCYWRYNWF3QUNwMkEtdlY3RGF3YjhLZEJwcUZ2dkE1ZHZiR09FWmRqUnp0YlhsaHlldEs4cmNHMGIwbmgwaWJ5cjhhNk9nRDk5a3NwYld2emFQYTE4djFoR21KbFVRUFliZWZoZGc4UWRtZGtVa0YzU3VEOFVnMnBIOVRBYkFIVHRhV3NhQUNLekc0MXc3ZlhUdE9YZTBINW5XVXhhR2xUb2sxNnJmS3h0Q2lxMDljTzNMTEY4TXY2MldqdGNaYnNNeGIzbGU3NU50Ykh1U2prUUhVSS13RTVOU0l2eUdrYllDM0hHZnBYaTZLOGxLOUxIN2tkZHk5SXpvQ2hTZ3E3VGg0YUs4dEpwVUF2MnZMVXdDSE95dndTcXBJVmUwajVEUXdEQVVtYnVZbndzRmlMdWhZbnZReTMtelIxMU5xSHdSdlpXbTFEMzlTVTYyQUNpaHBmRXdMWkgxMkpTVDdnWHROOFJuYUVzZFdlZ01WbFY4WkJPR2Mxd01IampLelpVQk9BV254TWI3RWlpNC1lendNQzlXWmRITFcyNHFpakRnX3lzQTJoalE0NzMzdEdhazNuZUNWODNFaTF6MnI4ek1Hd2dDVmR4YWNOUVcwNnRBandBY2ZMN0RrSFJUMTRvNVNpQWplWEdTYmd3Y21aaGJsZUppOXBhdl9vUDlBYjhYVG5sNWJTRi13UWd5RXdtdlhOcE15OXp6ZDh1aXpYclVVTFF4RE5CQnhqNHdMajZPcW40SUJVOGp2eVBsbVZ0YldxMU5ua2FScUN0UG85OGZaZU1YU2xreTF5QWQtbzZseF9teEE5NHJCMG5SNUNQNENoZkVmSHJzZzNBZW8tOUZlWUswaDE3bWdKSkFSTGFwV3VMdUVGUUt5MUlaSXpLM0QzRnJCNEE3bjZFNUdPbkdhWHZITW1PMmE2SVBBNzhVc0RVMVBIaWdMdllIYjFJbS1xUXFMa1lMVV8yMk5OSkpEeEdFTUMybE53N01ZMlpCX0dycjZSU2VSbFJrb3BCSXRqNUt0M1VEUTl1V0p5U0tUX0hSX3dWWEZXQWI3T2NFUWVrbUZHTFhSUDNzNmFvbnpoZUplbGJFcHljWDlwMEFFYWVpSlROU0FDOExIMTc0YUUwa05uX3hKaE90ekZ0Nk02VEtBUkMzLW9qWHZXaDRxOV9DWGdkZTRRRTB2ZGpTNElEeUo3bXpBLXVWTzI3QTZoSWpUNjUzSEo1THhneXNJUG96TDBUQjN2bFVtTkxPNVpBd0NWSHlrZ3R4OXY2cW1rM3pmRUJtdjZzcktodlRwSTdOSkNWQWEzQ1RrS0lsSXlHVGdOX0x3SFZtR1JLampWTTNoRDNtdnp5OXotVUc1VFp1VkM5N1p5c3ZpVHhORzZLRGNxTDVVNGptYWNUM19sMFkwS2k1X3ZtVUVWbFFWNUJsUVJQcGx1RU5UUmprU20zLXdIbFV0YXhHd01kUDl1UUgweGtUSTZQa1NvSHF1bG1UTnVoN2NWMTJyZFVySVF1Mjh5M2FsSXphVUtLLXVyaWU4YVQ1SnJfZlNTSGxIdjNYZmpuWFIzNE8zRnJNN1VGS0dCUVFvMmt1a3lLdzFyeVJYNnBteDBlckxXV3NpX290QWQ1SXRobi1CdFg0XzB3enpmQ0tGazVnbnFTa1NJVDd0clNqMjhQVFh5VXE5bUpwM1Vsa3NhOHI4cndRVGFpWk9jVUlIMDBKUm1nYzBSNy0tX1NsWlhENnlLejFaaDFXc2RWd2hycm1DS1NpWnRkVGhxaHlab0tFa2VUcmpCT08wNGozWlRiVXAyV0lmdkpQSUlQUEV6anExdEl1OTlMWXZTVG5sdjBOblg5ZHBmcHFfOE5pVHF2RnpDN2F2TUVyQ3ZWNUNjY0tNSDFlU1pUVVBpMkFaS25zY2htQ3labEM0V1A2XzVwVU9SUzFGUG9zeTluYXdZOU1oYjdSQ1ZzaEpuSzBJczVKZFVSRWVHNm9OUXJSUl9kZmdjeDJ3R0NITk4yRExmeXMzNnNWYXRGOW1uTXBzSFFPWkl6elhnaG1ieVp3N2VGUmJRNTNYRlE3d1hDUHdFUXdVcllmSXlYRDFMSlhNS2J4SUVoNV80QmxHQmdCNlIwVlNibjNUQ1hDUzJTX0FKeEJXMDR4eW5xRDhtSVMzSDdpd1VoMWlMX2Fteng3elJGRTdES2h5a29IQVdZMzA4VWVXYVFpQkxpZUhFREowc0lhSlNvbHFubHBNdEZaeHhaT2JEUmcwMVlPUHluMks0UVhMNzVKTlNIYjZDWHFRM2I0S1NETU82TDJuQ2ZxWnhzdUs3cEktd1F2T1V0TEdMWUFjOWJmcmFXd2prS1ZXOExOdDAwVnE4dFZEMml5ZXA2YnhkRFByZlZaOXJpUEdPQkJhXzA5TDdXXzBIU0UzOWVFYXRqMEdQZUFqdllzUm0yZEFkR2dLWUs3V1liSm9QNk9uSGZUXzZnNTE5SHNnWmxJMm5aQTkydzl5UVVkQXpRNXJQQU5XRC1zRG1hR2taTTkwX0Z2V2ZQN3dBbXd0cnc2Z3NPYVF0SU1EVk9GUzRwUzB4aDRMRzVvdTlkc3VIb0Q1VXVxTDYyVXRrTE5LWE5Gc2ZRSlQwYWdvR1Z3Sl9KU29GbHY4NkQwazl5T0hlaFRUeUhwd1lYbVBuU3N5X0xtUGdCNE9kVDEzbjlhVVZBNHE3UHFhOTJzaGQzZ29IMVpKR0Jqc0xCT1dBZGtEVVlPTmY5X1k2SFcxa1BiVXNzZkJqNmpiVjVJVTF3bWNhWUo5bkVmREJCR0haV0pyWkZ1ZFpJbE9fUW5qSUdFdC02RWpWNTdWOHJqNUZzRzM2SWQtRXFBMkFpQ0lXY3JFc0ZYOFlpUVRLZlhIV3dYdVVGZ1dQQXloQU9idmpqdEJ1SXFlakZLV2pZZXZfQlVVazJfbmRSdkNoR2JjWlVlSjBOWVc3bnpjalVDSmR1YnZpYkVFMU5RUExfNUdFbWxNeXRzdUFSZkVxU3RhM3Z3U1JzRjZXWFVvV3JQdVJZTVlDbndZYjk2R1NFUEVsUGU2TkdkYzR3LWxZYVcxNkhYNVRmc0g0a2dzQjVwR1N4NUZwLVhGRkEzY0NLYlNWSWhDZHJEakxJaE9fT1pvaUR6OHlrZ2tWajZteWFrU1pvOXdIb3p6Ylh2RGFYMmpBRkZhTWQwNXo5UnBSTTF3YnNYNXJRRDFQYWh6LUVqM3Y5YVhPQmQ1MnFOUkFKN0dHWVdQVy1RblB2R2NUVnNPcS05V0tUaU5nN3ZrZlVBZVN2NEc1MExTRzZKc2dyektsbjc3U3EwbWZSU1JLQ0puVFZ3MDl3VktyRlNpTU5vRUFNU0JHUWNKSHZlRk1lMkJybzk5SGxaUVM4SjFUb2txYURVUEVvRVdKOVN0Tk1aREx0emJualA2Z1FHel9mUmlIdkJySGptcHU4X3VXRnF1Q0FmR2RBRnc1RGRvN1MyQmVIaXlINE5kQzlMWWNuRDZyR29KOXhBMHlxRHZ0THF4eVN3WmM2ZzY3dzRpT2J3c1RhRUN5R21jeWJ5WjNsdXFlNE5td1dIbXQyaU44VnBlcXJyUjRZOWw4NE9FNGoydmZ1SEt6Vkc0NHA1WVZ5MzRnU2NXdnFVaEJxcmdjV3daSDJtcXVTNnpFN19qYW1neDd0SURlU2NzVXYxcGlNckU2d1pEb3RrWHZlak9pSFZmbHNhRGFqblh0MW56UXh4SlFNNU96MWNZLmVHeUZuV29QcHJQLTBFdVpFN2d2Rmc"}'}
    headers: {cache-control: no-cache, content-length: '43147', content-type: application/json;
        charset=utf-8, date: 'Wed, 04 Dec 2019 20:05:48 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.883, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultlgwvlc6ztlt3hsizr6s.vault.azure.net,
        /certificates/cert-name/backup, api-version=7.0, '']
- request:
    body: null
    headers:
      Accept: [application/json]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b6 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: DELETE
    uri: https://vault.vault.azure.net/certificates/cert-name?api-version=7.0
  response:
    body: {string: '{"id":"https://vault.vault.azure.net/certificates/cert-name/8f01a8de94bf4d97bca716d71817ffd8","kid":"https://vault.vault.azure.net/keys/cert-name/8f01a8de94bf4d97bca716d71817ffd8","sid":"https://vault.vault.azure.net/secrets/cert-name/8f01a8de94bf4d97bca716d71817ffd8","x5t":"O-pN4u2PDHci07m-TUV4io_mZu4","cer":"MIIDWjCCAkKgAwIBAgIQS5ZQXDv/Ts6ednkFMogSLTANBgkqhkiG9w0BAQsFADAaMRgwFgYDVQQDDA8qLm1pY3Jvc29mdC5jb20wHhcNMTkxMjA0MTk1NTQxWhcNMjExMjA0MjAwNTQxWjAaMRgwFgYDVQQDDA8qLm1pY3Jvc29mdC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDW3uosV9RDRFJ/hpv6x5+9b/mxvRUjTviwlpGxjQPydbfNiMkkUZDbbnO5REbHwIDlrAmA0Cmr8XddP4tmG1CVoe1y2wrW1+rXMIrUSlxXuhisznupQ7KPGbR7sylGqYRwXnNaRQnCWWw0l96ciqY8F7cnldAPT52BWDx0uCB063Nm27Nc6QCVB7HdauiqG/nl2vOZwW9s4rINjLh2ZN9YA42oVwUsggNjZZ9qJftey7fhQtw52ncrCR4Ileipo26OW+pnQLoH9n1KfmhT6hHYXSwTA3s6q0RAYFJA+AuCaKpXnNQGrKh/f1RZnuQVbUzdgCDqUh5npSxxGzNSnPmVAgMBAAGjgZswgZgwDgYDVR0PAQH/BAQDAgWgMAkGA1UdEwQCMAAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMBwGA1UdEQQVMBOCEXNkay5henVyZS1pbnQubmV0MB8GA1UdIwQYMBaAFIueoTJvOODf0dV7kqe4guSOHMzXMB0GA1UdDgQWBBSLnqEybzjg39HVe5KnuILkjhzM1zANBgkqhkiG9w0BAQsFAAOCAQEArII5Lbepr6vuikJ1NLzRa0yyAE8MlGvrxwkr75n3UmPFmqzZ8wpmDlFPvlwuoHgbs6WroyfCgLE7xTmFMxz8Vq+3WR+P1qJOsuGmcVudEINWlD1+IIHNcsgG/dOIegQLtTwN1giuu7X9QnPcgCp3iQDYQpuYAu5GvKP26y83g5agsBe9b8diah0uLlcp4fKfg46zMyLNKcHwyicmzr2ca9172WgPR3YLIAsbjPIFKNR8HuWot9RZKa7SzNv5rl33mmV1wpQugXD4tWdj87itKLpNrtP7rO1Dq7FJwiAckUjgDVgRgrfR8SpGDYQjOola0bSNtIXJSka6O49xm09Umg==","attributes":{"enabled":true,"nbf":1575489341,"exp":1638648341,"created":1575489941,"updated":1575489941,"recoveryLevel":"Purgeable"},"policy":{"id":"https://vault.vault.azure.net/certificates/cert-name/policy","key_props":{"exportable":true,"kty":"RSA","key_size":2048,"reuse_key":false},"secret_props":{"contentType":"application/x-pkcs12"},"x509_props":{"subject":"CN=*.microsoft.com","sans":{"dns_names":["sdk.azure-int.net"]},"ekus":["1.3.6.1.5.5.7.3.1","1.3.6.1.5.5.7.3.2"],"key_usage":["digitalSignature","keyEncipherment"],"validity_months":24,"basic_constraints":{"ca":false}},"lifetime_actions":[{"trigger":{"lifetime_percentage":80},"action":{"action_type":"AutoRenew"}}],"issuer":{"name":"Self"},"attributes":{"enabled":true,"created":1575489922,"updated":1575489922}},"pending":{"id":"https://vault.vault.azure.net/certificates/cert-name/pending"}}'}
    headers: {cache-control: no-cache, content-length: '2422', content-type: application/json;
        charset=utf-8, date: 'Wed, 04 Dec 2019 20:05:48 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.883, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultlgwvlc6ztlt3hsizr6s.vault.azure.net,
        /certificates/cert-name, api-version=7.0, '']
- request:
    body: '{"value": ""}'
    headers:
      Accept: [application/json]
      Content-Length: ['43148']
      Content-Type: [application/json; charset=utf-8]
      User-Agent: [azsdk-python-keyvault-certificates/4.0.0b6 Python/3.6.6 (Windows-10-10.0.18362-SP0)]
    method: POST
    uri: https://vault.vault.azure.net/certificates/restore?api-version=7.0
  response:
    body: {string: '{"id":"https://vault.vault.azure.net/certificates/cert-name/8f01a8de94bf4d97bca716d71817ffd8","kid":"https://vault.vault.azure.net/keys/cert-name/8f01a8de94bf4d97bca716d71817ffd8","sid":"https://vault.vault.azure.net/secrets/cert-name/8f01a8de94bf4d97bca716d71817ffd8","x5t":"O-pN4u2PDHci07m-TUV4io_mZu4","cer":"MIIDWjCCAkKgAwIBAgIQS5ZQXDv/Ts6ednkFMogSLTANBgkqhkiG9w0BAQsFADAaMRgwFgYDVQQDDA8qLm1pY3Jvc29mdC5jb20wHhcNMTkxMjA0MTk1NTQxWhcNMjExMjA0MjAwNTQxWjAaMRgwFgYDVQQDDA8qLm1pY3Jvc29mdC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDW3uosV9RDRFJ/hpv6x5+9b/mxvRUjTviwlpGxjQPydbfNiMkkUZDbbnO5REbHwIDlrAmA0Cmr8XddP4tmG1CVoe1y2wrW1+rXMIrUSlxXuhisznupQ7KPGbR7sylGqYRwXnNaRQnCWWw0l96ciqY8F7cnldAPT52BWDx0uCB063Nm27Nc6QCVB7HdauiqG/nl2vOZwW9s4rINjLh2ZN9YA42oVwUsggNjZZ9qJftey7fhQtw52ncrCR4Ileipo26OW+pnQLoH9n1KfmhT6hHYXSwTA3s6q0RAYFJA+AuCaKpXnNQGrKh/f1RZnuQVbUzdgCDqUh5npSxxGzNSnPmVAgMBAAGjgZswgZgwDgYDVR0PAQH/BAQDAgWgMAkGA1UdEwQCMAAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMBwGA1UdEQQVMBOCEXNkay5henVyZS1pbnQubmV0MB8GA1UdIwQYMBaAFIueoTJvOODf0dV7kqe4guSOHMzXMB0GA1UdDgQWBBSLnqEybzjg39HVe5KnuILkjhzM1zANBgkqhkiG9w0BAQsFAAOCAQEArII5Lbepr6vuikJ1NLzRa0yyAE8MlGvrxwkr75n3UmPFmqzZ8wpmDlFPvlwuoHgbs6WroyfCgLE7xTmFMxz8Vq+3WR+P1qJOsuGmcVudEINWlD1+IIHNcsgG/dOIegQLtTwN1giuu7X9QnPcgCp3iQDYQpuYAu5GvKP26y83g5agsBe9b8diah0uLlcp4fKfg46zMyLNKcHwyicmzr2ca9172WgPR3YLIAsbjPIFKNR8HuWot9RZKa7SzNv5rl33mmV1wpQugXD4tWdj87itKLpNrtP7rO1Dq7FJwiAckUjgDVgRgrfR8SpGDYQjOola0bSNtIXJSka6O49xm09Umg==","attributes":{"enabled":true,"nbf":1575489341,"exp":1638648341,"created":1575489941,"updated":1575489941,"recoveryLevel":"Purgeable"},"policy":{"id":"https://vault.vault.azure.net/certificates/cert-name/policy","key_props":{"exportable":true,"kty":"RSA","key_size":2048,"reuse_key":false},"secret_props":{"contentType":"application/x-pkcs12"},"x509_props":{"subject":"CN=*.microsoft.com","ekus":["1.3.6.1.5.5.7.3.1","1.3.6.1.5.5.7.3.2"],"key_usage":["digitalSignature","keyEncipherment"],"validity_months":24,"basic_constraints":{"ca":false}},"lifetime_actions":[{"trigger":{"lifetime_percentage":80},"action":{"action_type":"AutoRenew"}}],"issuer":{"name":"Self"},"attributes":{"enabled":true,"created":1575489922,"updated":1575489922}}}'}
    headers: {cache-control: no-cache, content-length: '2280', content-type: application/json;
        charset=utf-8, date: 'Wed, 04 Dec 2019 20:05:49 GMT', expires: '-1', pragma: no-cache,
      server: Microsoft-IIS/10.0, strict-transport-security: max-age=31536000;includeSubDomains,
      x-aspnet-version: 4.0.30319, x-content-type-options: nosniff, x-ms-keyvault-network-info: addr=131.107.160.72;act_addr_fam=InterNetwork;,
      x-ms-keyvault-region: westus, x-ms-keyvault-service-version: 1.1.0.883, x-powered-by: ASP.NET}
    status: {code: 200, message: OK}
    url: !!python/object/new:yarl.URL
      state: !!python/tuple
      - !!python/object/new:urllib.parse.SplitResult [https, vaultlgwvlc6ztlt3hsizr6s.vault.azure.net,
        /certificates/restore, api-version=7.0, '']
version: 1
