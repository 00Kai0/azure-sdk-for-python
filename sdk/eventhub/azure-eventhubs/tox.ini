[tox]
envlist = py36-{linux,macos,windows},py27-{linux,macos,windows}

[base]
deps = -rdev_requirements.txt

[testenv:clean]
deps = coverage
commands = coverage erase

[pytest]
out_options = --junitxml={toxinidir}/test-junit-{envname}.xml --verbose --durations=10
cov_options = --cov --cov-report=

[testenv]
platform = linux: linux
           macos: darwin
           windows: win32
passenv = *
deps = {[base]deps}
changedir = {toxinidir}
whitelist_externals = cmd.exe
                      /bin/bash
                      cat
                      type.exe
                      type

commands = 
    pytest {[pytest]out_options} {[pytest]cov_options} {toxinidir} {posargs}

    macos: bash -c 'pylint --output-format=parseable --rcfile {toxinidir}/../../../pylintrc --exit-zero {toxinidir}/azure' > {toxinidir}/pylint-{envname}.out.txt
    macos: cat {toxinidir}/pylint-{envname}.out.txt

    linux: pylint --output-format=parseable --rcfile {toxinidir}/../../../pylintrc --exit-zero {toxinidir}/azure 2>&1 | tee {toxinidir}/pylint-{envname}.out.txt

    windows: cmd /c 'pylint --output-format=parseable --rcfile {toxinidir}/../../../pylintrc --exit-zero {toxinidir}/azure' > {toxinidir}/pylint-{envname}.out.txt
    windows: cmd /c 'type {toxinidir}\pylint-{envname}.out.txt'

    coverage xml -o {toxinidir}/coverage-{envname}.xml


