# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class CloudError(Model):
    """CloudError.
    """

    _attribute_map = {
    }


class DisableSerialConsoleResult(Model):
    """Serial Console Disable Result.

    Returns whether or not Serial Console is disabled.

    :param value: Whether or not Serial Console is disabled.
    :type value: bool
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': 'bool'},
    }

    def __init__(self, *, value: bool=None, **kwargs) -> None:
        super(DisableSerialConsoleResult, self).__init__(**kwargs)
        self.value = value


class EnableSerialConsoleResult(Model):
    """Serial Console Enable Result.

    Returns whether or not Serial Console is disabled (enabled).

    :param value: Whether or not Serial Console is disabled (enabled).
    :type value: bool
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': 'bool'},
    }

    def __init__(self, *, value: bool=None, **kwargs) -> None:
        super(EnableSerialConsoleResult, self).__init__(**kwargs)
        self.value = value


class GetSerialConsoleResult(Model):
    """Serial Console GET Result.

    Returns whether or not Serial Console is disabled.

    :param value: Whether or not Serial Console is disabled.
    :type value: bool
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': 'bool'},
    }

    def __init__(self, *, value: bool=None, **kwargs) -> None:
        super(GetSerialConsoleResult, self).__init__(**kwargs)
        self.value = value


class GetSerialConsoleSubscriptionNotFound(Model):
    """Serial Console subscription not found.

    Error saying that the provided subscription could not be found.

    :param value: Error saying that the provided subscription could not be
     found
    :type value: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': 'str'},
    }

    def __init__(self, *, value: str=None, **kwargs) -> None:
        super(GetSerialConsoleSubscriptionNotFound, self).__init__(**kwargs)
        self.value = value


class SerialConsoleOperations(Model):
    """Serial Console operations.

    Serial Console operations.

    :param value: Serial Console operations
    :type value: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': 'str'},
    }

    def __init__(self, *, value: str=None, **kwargs) -> None:
        super(SerialConsoleOperations, self).__init__(**kwargs)
        self.value = value
