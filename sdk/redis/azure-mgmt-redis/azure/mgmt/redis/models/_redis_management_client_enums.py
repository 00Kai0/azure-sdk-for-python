# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum

class DayOfWeek(str, Enum):
    """Day of the week when a cache can be patched.
    """

    monday = "Monday"
    tuesday = "Tuesday"
    wednesday = "Wednesday"
    thursday = "Thursday"
    friday = "Friday"
    saturday = "Saturday"
    sunday = "Sunday"
    everyday = "Everyday"
    weekend = "Weekend"

class ProvisioningState(str, Enum):
    """Redis instance provisioning status.
    """

    creating = "Creating"
    deleting = "Deleting"
    disabled = "Disabled"
    failed = "Failed"
    linking = "Linking"
    provisioning = "Provisioning"
    recovering_scale_failure = "RecoveringScaleFailure"
    scaling = "Scaling"
    succeeded = "Succeeded"
    unlinking = "Unlinking"
    unprovisioning = "Unprovisioning"
    updating = "Updating"

class RebootType(str, Enum):
    """Which Redis node(s) to reboot. Depending on this value data loss is possible.
    """

    primary_node = "PrimaryNode"
    secondary_node = "SecondaryNode"
    all_nodes = "AllNodes"

class RedisKeyType(str, Enum):
    """The Redis access key to regenerate.
    """

    primary = "Primary"
    secondary = "Secondary"

class ReplicationRole(str, Enum):
    """Role of the linked server.
    """

    primary = "Primary"
    secondary = "Secondary"

class SkuFamily(str, Enum):
    """The SKU family to use. Valid values: (C, P). (C = Basic/Standard, P = Premium).
    """

    c = "C"
    p = "P"

class SkuName(str, Enum):
    """The type of Redis cache to deploy. Valid values: (Basic, Standard, Premium)
    """

    basic = "Basic"
    standard = "Standard"
    premium = "Premium"

class TlsVersion(str, Enum):
    """Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0',
    '1.1', '1.2')
    """

    one0 = "1.0"
    one1 = "1.1"
    one2 = "1.2"
