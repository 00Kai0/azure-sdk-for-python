# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class RulesEngineMatchCondition(Model):
    """Define a match condition.

    All required parameters must be populated in order to send to Azure.

    :param rules_engine_match_variable: Required. Match Variable. Possible
     values include: 'IsMobile', 'RemoteAddr', 'RequestMethod', 'QueryString',
     'PostArgs', 'RequestUri', 'RequestPath', 'RequestFilename',
     'RequestFilenameExtension', 'RequestHeader', 'RequestBody',
     'RequestScheme'
    :type rules_engine_match_variable: str or
     ~azure.mgmt.frontdoor.models.RulesEngineMatchVariable
    :param selector: Name of selector in RequestHeader or RequestBody to be
     matched
    :type selector: str
    :param rules_engine_operator: Required. Describes operator to apply to the
     match condition. Possible values include: 'Any', 'IPMatch', 'GeoMatch',
     'Equal', 'Contains', 'LessThan', 'GreaterThan', 'LessThanOrEqual',
     'GreaterThanOrEqual', 'BeginsWith', 'EndsWith'
    :type rules_engine_operator: str or
     ~azure.mgmt.frontdoor.models.RulesEngineOperator
    :param negate_condition: Describes if this is negate condition or not
    :type negate_condition: bool
    :param rules_engine_match_value: Required. Match values to match against.
     The operator will apply to each value in here with OR semantics. If any of
     them match the variable with the given operator this match condition is
     considered a match.
    :type rules_engine_match_value: list[str]
    :param transforms: List of transforms
    :type transforms: list[str or ~azure.mgmt.frontdoor.models.Transform]
    """

    _validation = {
        'rules_engine_match_variable': {'required': True},
        'rules_engine_operator': {'required': True},
        'rules_engine_match_value': {'required': True},
    }

    _attribute_map = {
        'rules_engine_match_variable': {'key': 'rulesEngineMatchVariable', 'type': 'str'},
        'selector': {'key': 'selector', 'type': 'str'},
        'rules_engine_operator': {'key': 'rulesEngineOperator', 'type': 'str'},
        'negate_condition': {'key': 'negateCondition', 'type': 'bool'},
        'rules_engine_match_value': {'key': 'rulesEngineMatchValue', 'type': '[str]'},
        'transforms': {'key': 'transforms', 'type': '[str]'},
    }

    def __init__(self, *, rules_engine_match_variable, rules_engine_operator, rules_engine_match_value, selector: str=None, negate_condition: bool=None, transforms=None, **kwargs) -> None:
        super(RulesEngineMatchCondition, self).__init__(**kwargs)
        self.rules_engine_match_variable = rules_engine_match_variable
        self.selector = selector
        self.rules_engine_operator = rules_engine_operator
        self.negate_condition = negate_condition
        self.rules_engine_match_value = rules_engine_match_value
        self.transforms = transforms
