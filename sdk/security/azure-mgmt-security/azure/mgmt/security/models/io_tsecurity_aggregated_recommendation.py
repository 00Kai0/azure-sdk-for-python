# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .resource import Resource


class IoTSecurityAggregatedRecommendation(Resource):
    """Security Solution.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Resource Id
    :vartype id: str
    :ivar name: Resource name
    :vartype name: str
    :ivar type: Resource type
    :vartype type: str
    :ivar recommendation_name: Required. Name of the alert type
    :vartype recommendation_name: str
    :ivar recommendation_display_name: Required. Display name of the alert
     type
    :vartype recommendation_display_name: str
    :ivar description: Required. Description of the incident and what it means
    :vartype description: str
    :param recommendation_type_id: Required. The recommendation-type GUID.
    :type recommendation_type_id: str
    :ivar detected_by: Required. Name of the vendor that discovered the
     incident
    :vartype detected_by: str
    :ivar reported_severity: Required. Estimated severity of this alert.
     Possible values include: 'Informational', 'Low', 'Medium', 'High'
    :vartype reported_severity: str or
     ~azure.mgmt.security.models.ReportedSeverity
    :ivar healthy_devices: Required. the number of the healthy devices within
     the solution
    :vartype healthy_devices: int
    :ivar unhealthy_devices: Required. the number of the unhealthy devices
     within the solution
    :vartype unhealthy_devices: int
    :ivar log_analytics_query: Required. query in log analytics to get the
     list of affected devices/alerts
    :vartype log_analytics_query: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'recommendation_name': {'required': True, 'readonly': True},
        'recommendation_display_name': {'required': True, 'readonly': True},
        'description': {'required': True, 'readonly': True},
        'recommendation_type_id': {'required': True},
        'detected_by': {'required': True, 'readonly': True},
        'reported_severity': {'required': True, 'readonly': True},
        'healthy_devices': {'required': True, 'readonly': True},
        'unhealthy_devices': {'required': True, 'readonly': True},
        'log_analytics_query': {'required': True, 'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'recommendation_name': {'key': 'recommendationName', 'type': 'str'},
        'recommendation_display_name': {'key': 'recommendationDisplayName', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'recommendation_type_id': {'key': 'recommendationTypeId', 'type': 'str'},
        'detected_by': {'key': 'detectedBy', 'type': 'str'},
        'reported_severity': {'key': 'reportedSeverity', 'type': 'str'},
        'healthy_devices': {'key': 'healthyDevices', 'type': 'int'},
        'unhealthy_devices': {'key': 'unhealthyDevices', 'type': 'int'},
        'log_analytics_query': {'key': 'logAnalyticsQuery', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(IoTSecurityAggregatedRecommendation, self).__init__(**kwargs)
        self.recommendation_name = None
        self.recommendation_display_name = None
        self.description = None
        self.recommendation_type_id = kwargs.get('recommendation_type_id', None)
        self.detected_by = None
        self.reported_severity = None
        self.healthy_devices = None
        self.unhealthy_devices = None
        self.log_analytics_query = None
