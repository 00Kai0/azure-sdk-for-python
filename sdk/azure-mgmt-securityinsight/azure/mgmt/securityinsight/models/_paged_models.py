# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.paging import Paged


class OperationPaged(Paged):
    """
    A paging container for iterating over a list of :class:`Operation <azure.mgmt.securityinsight.models.Operation>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[Operation]'}
    }

    def __init__(self, *args, **kwargs):

        super(OperationPaged, self).__init__(*args, **kwargs)
class AlertRulePaged(Paged):
    """
    A paging container for iterating over a list of :class:`AlertRule <azure.mgmt.securityinsight.models.AlertRule>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[AlertRule]'}
    }

    def __init__(self, *args, **kwargs):

        super(AlertRulePaged, self).__init__(*args, **kwargs)
class ActionResponsePaged(Paged):
    """
    A paging container for iterating over a list of :class:`ActionResponse <azure.mgmt.securityinsight.models.ActionResponse>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[ActionResponse]'}
    }

    def __init__(self, *args, **kwargs):

        super(ActionResponsePaged, self).__init__(*args, **kwargs)
class AlertRuleTemplatePaged(Paged):
    """
    A paging container for iterating over a list of :class:`AlertRuleTemplate <azure.mgmt.securityinsight.models.AlertRuleTemplate>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[AlertRuleTemplate]'}
    }

    def __init__(self, *args, **kwargs):

        super(AlertRuleTemplatePaged, self).__init__(*args, **kwargs)
class CasePaged(Paged):
    """
    A paging container for iterating over a list of :class:`Case <azure.mgmt.securityinsight.models.Case>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[Case]'}
    }

    def __init__(self, *args, **kwargs):

        super(CasePaged, self).__init__(*args, **kwargs)
class CaseCommentPaged(Paged):
    """
    A paging container for iterating over a list of :class:`CaseComment <azure.mgmt.securityinsight.models.CaseComment>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[CaseComment]'}
    }

    def __init__(self, *args, **kwargs):

        super(CaseCommentPaged, self).__init__(*args, **kwargs)
class BookmarkPaged(Paged):
    """
    A paging container for iterating over a list of :class:`Bookmark <azure.mgmt.securityinsight.models.Bookmark>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[Bookmark]'}
    }

    def __init__(self, *args, **kwargs):

        super(BookmarkPaged, self).__init__(*args, **kwargs)
class CaseRelationPaged(Paged):
    """
    A paging container for iterating over a list of :class:`CaseRelation <azure.mgmt.securityinsight.models.CaseRelation>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[CaseRelation]'}
    }

    def __init__(self, *args, **kwargs):

        super(CaseRelationPaged, self).__init__(*args, **kwargs)
class BookmarkRelationPaged(Paged):
    """
    A paging container for iterating over a list of :class:`BookmarkRelation <azure.mgmt.securityinsight.models.BookmarkRelation>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[BookmarkRelation]'}
    }

    def __init__(self, *args, **kwargs):

        super(BookmarkRelationPaged, self).__init__(*args, **kwargs)
class DataConnectorPaged(Paged):
    """
    A paging container for iterating over a list of :class:`DataConnector <azure.mgmt.securityinsight.models.DataConnector>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[DataConnector]'}
    }

    def __init__(self, *args, **kwargs):

        super(DataConnectorPaged, self).__init__(*args, **kwargs)
class EntityPaged(Paged):
    """
    A paging container for iterating over a list of :class:`Entity <azure.mgmt.securityinsight.models.Entity>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[Entity]'}
    }

    def __init__(self, *args, **kwargs):

        super(EntityPaged, self).__init__(*args, **kwargs)
class OfficeConsentPaged(Paged):
    """
    A paging container for iterating over a list of :class:`OfficeConsent <azure.mgmt.securityinsight.models.OfficeConsent>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[OfficeConsent]'}
    }

    def __init__(self, *args, **kwargs):

        super(OfficeConsentPaged, self).__init__(*args, **kwargs)
class EntityQueryPaged(Paged):
    """
    A paging container for iterating over a list of :class:`EntityQuery <azure.mgmt.securityinsight.models.EntityQuery>` object
    """

    _attribute_map = {
        'next_link': {'key': 'nextLink', 'type': 'str'},
        'current_page': {'key': 'value', 'type': '[EntityQuery]'}
    }

    def __init__(self, *args, **kwargs):

        super(EntityQueryPaged, self).__init__(*args, **kwargs)
