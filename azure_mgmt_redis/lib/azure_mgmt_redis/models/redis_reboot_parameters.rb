# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ARM::Redis
  module Models
    #
    # Specifies which redis node(s) to reboot.
    #
    class RedisRebootParameters

      include MsRestAzure

      # @return [RebootType] Which redis node(s) to reboot. Depending on this
      # value data loss is possible. Possible values include: 'PrimaryNode',
      # 'SecondaryNode', 'AllNodes'
      attr_accessor :reboot_type

      # @return [Integer] In case of cluster cache, this specifies shard id
      # which should be rebooted.
      attr_accessor :shard_id

      #
      # Validate the object. Throws ValidationError if validation fails.
      #
      def validate
        fail MsRest::ValidationError, 'property reboot_type is nil' if @reboot_type.nil?
      end

      #
      # Serializes given Model object into Ruby Hash.
      # @param object Model object to serialize.
      # @return [Hash] Serialized object in form of Ruby Hash.
      #
      def self.serialize_object(object)
        object.validate
        output_object = {}

        serialized_property = object.reboot_type
        output_object['rebootType'] = serialized_property unless serialized_property.nil?

        serialized_property = object.shard_id
        output_object['shardId'] = serialized_property unless serialized_property.nil?

        output_object
      end

      #
      # Deserializes given Ruby Hash into Model object.
      # @param object [Hash] Ruby Hash object to deserialize.
      # @return [RedisRebootParameters] Deserialized object.
      #
      def self.deserialize_object(object)
        return if object.nil?
        output_object = RedisRebootParameters.new

        deserialized_property = object['rebootType']
        if (!deserialized_property.nil? && !deserialized_property.empty?)
          enum_is_valid = RebootType.constants.any? { |e| RebootType.const_get(e).to_s.downcase == deserialized_property.downcase }
          warn 'Enum RebootType does not contain ' + deserialized_property.downcase + ', but was received from the server.' unless enum_is_valid
        end
        output_object.reboot_type = deserialized_property

        deserialized_property = object['shardId']
        deserialized_property = Integer(deserialized_property) unless deserialized_property.to_s.empty?
        output_object.shard_id = deserialized_property

        output_object
      end
    end
  end
end
